<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>COAsT â€“ Tidegauge</title><link>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/tidegauge/</link><description>Recent content in Tidegauge on COAsT</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/tidegauge/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Tidegauge validation tutorial</title><link>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/tidegauge/tidegauge_validation_tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/tidegauge/tidegauge_validation_tutorial/</guid><description>
&lt;p>This tutorial gives an overview of some of validation tools available when
using the Tidegauge objects in COAsT.&lt;/p>
&lt;h3 id="import-necessary-libraries">Import necessary libraries&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">xarray&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">xr&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">numpy&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">np&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">coast&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">datetime&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">matplotlib.pyplot&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">plt&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="define-paths">Define paths&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">fn_dom&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;lt;PATH_TO_NEMO_DOMAIN&amp;gt;&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_dat&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;lt;PATH_TO_NEMO_DATA&amp;gt;&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_config&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;lt;PATH_TO_CONFIG.json&amp;gt;&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_tg&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;lt;PATH_TO_TIDEGAUGE_NETCDF&amp;gt;&amp;#34;&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># This should already be processed, on the same time dimension&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Change this to 0 to not use default files.&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#print(f&amp;#34;Use default files&amp;#34;)&lt;/span>
&lt;span style="color:#204a87">dir&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./example_files/&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_dom&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87">dir&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;coast_example_nemo_domain.nc&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_dat&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87">dir&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;coast_example_nemo_data.nc&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_config&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./config/example_nemo_grid_t.json&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_tidegauge&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87">dir&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;tide_gauges/lowestoft-p024-uk-bodc&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_tg&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87">dir&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;tide_gauges/coast_example_tidegauges.nc&amp;#34;&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># These are a collection (xr.DataSet) of tidegauge observations. Created for this demonstration, they are synthetic.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="reading-and-manipulation">Reading and manipulation&lt;/h3>
&lt;p>We can create our empty tidegauge object:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">tidegauge&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">coast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Tidegauge&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Tidegauge object at 0x55fc4fb4cfc0 initialised
&lt;/code>&lt;/pre>
&lt;p>The &lt;code>Tidegauge&lt;/code> class contains multiple methods for reading different typical
tidegauge formats. This includes reading from the GESLA and BODC databases.
To read a gesla file between two dates, we can use:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">date0&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">datetime&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2007&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">date1&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">datetime&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2007&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">12&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">tidegauge&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">read_gesla_v3&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">fn_tidegauge&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">date_start&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">date0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">date_end&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">date1&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>A Tidegauge object is a type of Timeseries object, so it has the form:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">tidegauge&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div>&lt;svg style="position: absolute; width: 0; height: 0; overflow: hidden">
&lt;defs>
&lt;symbol id="icon-database" viewBox="0 0 32 32">
&lt;path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z">&lt;/path>
&lt;path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z">&lt;/path>
&lt;path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z">&lt;/path>
&lt;/symbol>
&lt;symbol id="icon-file-text2" viewBox="0 0 32 32">
&lt;path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z">&lt;/path>
&lt;path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z">&lt;/path>
&lt;path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z">&lt;/path>
&lt;path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z">&lt;/path>
&lt;/symbol>
&lt;/defs>
&lt;/svg>
&lt;style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
*
*/
&lt;p>:root {
&amp;ndash;xr-font-color0: var(&amp;ndash;jp-content-font-color0, rgba(0, 0, 0, 1));
&amp;ndash;xr-font-color2: var(&amp;ndash;jp-content-font-color2, rgba(0, 0, 0, 0.54));
&amp;ndash;xr-font-color3: var(&amp;ndash;jp-content-font-color3, rgba(0, 0, 0, 0.38));
&amp;ndash;xr-border-color: var(&amp;ndash;jp-border-color2, #e0e0e0);
&amp;ndash;xr-disabled-color: var(&amp;ndash;jp-layout-color3, #bdbdbd);
&amp;ndash;xr-background-color: var(&amp;ndash;jp-layout-color0, white);
&amp;ndash;xr-background-color-row-even: var(&amp;ndash;jp-layout-color1, white);
&amp;ndash;xr-background-color-row-odd: var(&amp;ndash;jp-layout-color2, #eeeeee);
}&lt;/p>
&lt;p>html[theme=dark],
body.vscode-dark {
&amp;ndash;xr-font-color0: rgba(255, 255, 255, 1);
&amp;ndash;xr-font-color2: rgba(255, 255, 255, 0.54);
&amp;ndash;xr-font-color3: rgba(255, 255, 255, 0.38);
&amp;ndash;xr-border-color: #1F1F1F;
&amp;ndash;xr-disabled-color: #515151;
&amp;ndash;xr-background-color: #111111;
&amp;ndash;xr-background-color-row-even: #111111;
&amp;ndash;xr-background-color-row-odd: #313131;
}&lt;/p>
&lt;p>.xr-wrap {
display: block !important;
min-width: 300px;
max-width: 700px;
}&lt;/p>
&lt;p>.xr-text-repr-fallback {
/* fallback to plain text repr when CSS is not injected (untrusted notebook) */
display: none;
}&lt;/p>
&lt;p>.xr-header {
padding-top: 6px;
padding-bottom: 6px;
margin-bottom: 4px;
border-bottom: solid 1px var(&amp;ndash;xr-border-color);
}&lt;/p>
&lt;p>.xr-header &amp;gt; div,
.xr-header &amp;gt; ul {
display: inline;
margin-top: 0;
margin-bottom: 0;
}&lt;/p>
&lt;p>.xr-obj-type,
.xr-array-name {
margin-left: 2px;
margin-right: 10px;
}&lt;/p>
&lt;p>.xr-obj-type {
color: var(&amp;ndash;xr-font-color2);
}&lt;/p>
&lt;p>.xr-sections {
padding-left: 0 !important;
display: grid;
grid-template-columns: 150px auto auto 1fr 20px 20px;
}&lt;/p>
&lt;p>.xr-section-item {
display: contents;
}&lt;/p>
&lt;p>.xr-section-item input {
display: none;
}&lt;/p>
&lt;p>.xr-section-item input + label {
color: var(&amp;ndash;xr-disabled-color);
}&lt;/p>
&lt;p>.xr-section-item input:enabled + label {
cursor: pointer;
color: var(&amp;ndash;xr-font-color2);
}&lt;/p>
&lt;p>.xr-section-item input:enabled + label:hover {
color: var(&amp;ndash;xr-font-color0);
}&lt;/p>
&lt;p>.xr-section-summary {
grid-column: 1;
color: var(&amp;ndash;xr-font-color2);
font-weight: 500;
}&lt;/p>
&lt;p>.xr-section-summary &amp;gt; span {
display: inline-block;
padding-left: 0.5em;
}&lt;/p>
&lt;p>.xr-section-summary-in:disabled + label {
color: var(&amp;ndash;xr-font-color2);
}&lt;/p>
&lt;p>.xr-section-summary-in + label:before {
display: inline-block;
content: &amp;lsquo;â–º&amp;rsquo;;
font-size: 11px;
width: 15px;
text-align: center;
}&lt;/p>
&lt;p>.xr-section-summary-in:disabled + label:before {
color: var(&amp;ndash;xr-disabled-color);
}&lt;/p>
&lt;p>.xr-section-summary-in:checked + label:before {
content: &amp;lsquo;â–¼&amp;rsquo;;
}&lt;/p>
&lt;p>.xr-section-summary-in:checked + label &amp;gt; span {
display: none;
}&lt;/p>
&lt;p>.xr-section-summary,
.xr-section-inline-details {
padding-top: 4px;
padding-bottom: 4px;
}&lt;/p>
&lt;p>.xr-section-inline-details {
grid-column: 2 / -1;
}&lt;/p>
&lt;p>.xr-section-details {
display: none;
grid-column: 1 / -1;
margin-bottom: 5px;
}&lt;/p>
&lt;p>.xr-section-summary-in:checked ~ .xr-section-details {
display: contents;
}&lt;/p>
&lt;p>.xr-array-wrap {
grid-column: 1 / -1;
display: grid;
grid-template-columns: 20px auto;
}&lt;/p>
&lt;p>.xr-array-wrap &amp;gt; label {
grid-column: 1;
vertical-align: top;
}&lt;/p>
&lt;p>.xr-preview {
color: var(&amp;ndash;xr-font-color3);
}&lt;/p>
&lt;p>.xr-array-preview,
.xr-array-data {
padding: 0 5px !important;
grid-column: 2;
}&lt;/p>
&lt;p>.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
display: none;
}&lt;/p>
&lt;p>.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
display: inline-block;
}&lt;/p>
&lt;p>.xr-dim-list {
display: inline-block !important;
list-style: none;
padding: 0 !important;
margin: 0;
}&lt;/p>
&lt;p>.xr-dim-list li {
display: inline-block;
padding: 0;
margin: 0;
}&lt;/p>
&lt;p>.xr-dim-list:before {
content: &amp;lsquo;(';
}&lt;/p>
&lt;p>.xr-dim-list:after {
content: &amp;lsquo;)';
}&lt;/p>
&lt;p>.xr-dim-list li:not(:last-child):after {
content: &amp;lsquo;,';
padding-right: 5px;
}&lt;/p>
&lt;p>.xr-has-index {
font-weight: bold;
}&lt;/p>
&lt;p>.xr-var-list,
.xr-var-item {
display: contents;
}&lt;/p>
&lt;p>.xr-var-item &amp;gt; div,
.xr-var-item label,
.xr-var-item &amp;gt; .xr-var-name span {
background-color: var(&amp;ndash;xr-background-color-row-even);
margin-bottom: 0;
}&lt;/p>
&lt;p>.xr-var-item &amp;gt; .xr-var-name:hover span {
padding-right: 5px;
}&lt;/p>
&lt;p>.xr-var-list &amp;gt; li:nth-child(odd) &amp;gt; div,
.xr-var-list &amp;gt; li:nth-child(odd) &amp;gt; label,
.xr-var-list &amp;gt; li:nth-child(odd) &amp;gt; .xr-var-name span {
background-color: var(&amp;ndash;xr-background-color-row-odd);
}&lt;/p>
&lt;p>.xr-var-name {
grid-column: 1;
}&lt;/p>
&lt;p>.xr-var-dims {
grid-column: 2;
}&lt;/p>
&lt;p>.xr-var-dtype {
grid-column: 3;
text-align: right;
color: var(&amp;ndash;xr-font-color2);
}&lt;/p>
&lt;p>.xr-var-preview {
grid-column: 4;
}&lt;/p>
&lt;p>.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
white-space: nowrap;
overflow: hidden;
text-overflow: ellipsis;
padding-right: 10px;
}&lt;/p>
&lt;p>.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
overflow: visible;
width: auto;
z-index: 1;
}&lt;/p>
&lt;p>.xr-var-attrs,
.xr-var-data {
display: none;
background-color: var(&amp;ndash;xr-background-color) !important;
padding-bottom: 5px !important;
}&lt;/p>
&lt;p>.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data {
display: block;
}&lt;/p>
&lt;p>.xr-var-data &amp;gt; table {
float: right;
}&lt;/p>
&lt;p>.xr-var-name span,
.xr-var-data,
.xr-attrs {
padding-left: 25px !important;
}&lt;/p>
&lt;p>.xr-attrs,
.xr-var-attrs,
.xr-var-data {
grid-column: 1 / -1;
}&lt;/p>
&lt;p>dl.xr-attrs {
padding: 0;
margin: 0;
display: grid;
grid-template-columns: 125px auto;
}&lt;/p>
&lt;p>.xr-attrs dt,
.xr-attrs dd {
padding: 0;
margin: 0;
float: left;
padding-right: 10px;
width: auto;
}&lt;/p>
&lt;p>.xr-attrs dt {
font-weight: normal;
grid-column: 1;
}&lt;/p>
&lt;p>.xr-attrs dt:hover span {
display: inline-block;
background: var(&amp;ndash;xr-background-color);
padding-right: 10px;
}&lt;/p>
&lt;p>.xr-attrs dd {
grid-column: 2;
white-space: pre-wrap;
word-break: break-all;
}&lt;/p>
&lt;p>.xr-icon-database,
.xr-icon-file-text2 {
display: inline-block;
vertical-align: middle;
width: 1em;
height: 1.5em !important;
stroke-width: 0;
stroke: currentColor;
fill: currentColor;
}
&lt;/style>&lt;pre class='xr-text-repr-fallback'>&amp;lt;xarray.Dataset&amp;gt;
Dimensions: (id_dim: 1, t_dim: 193)
Coordinates:
time (t_dim) datetime64[ns] 2007-01-10 &amp;hellip; 2007-01-12
longitude (id_dim) float64 1.751
latitude (id_dim) float64 52.47
id_name (id_dim) &amp;lt;U9 'Lowestoft'
Dimensions without coordinates: id_dim, t_dim
Data variables:
ssh (id_dim, t_dim) float64 2.818 2.823 2.871 &amp;hellip; 3.214 3.257 3.371
qc_flags (id_dim, t_dim) int64 1 1 1 1 1 1 1 1 1 1 &amp;hellip; 1 1 1 1 1 1 1 1 1 1&lt;/pre>&lt;div class='xr-wrap' style='display:none'>&lt;div class='xr-header'>&lt;div class='xr-obj-type'>xarray.Dataset&lt;/div>&lt;/div>&lt;ul class='xr-sections'>&lt;li class='xr-section-item'>&lt;input id='section-69ec7429-7a38-4861-8b28-d9a943f68bb7' class='xr-section-summary-in' type='checkbox' disabled >&lt;label for='section-69ec7429-7a38-4861-8b28-d9a943f68bb7' class='xr-section-summary' title='Expand/collapse section'>Dimensions:&lt;/label>&lt;div class='xr-section-inline-details'>&lt;ul class='xr-dim-list'>&lt;li>&lt;span>id_dim&lt;/span>: 1&lt;/li>&lt;li>&lt;span>t_dim&lt;/span>: 193&lt;/li>&lt;/ul>&lt;/div>&lt;div class='xr-section-details'>&lt;/div>&lt;/li>&lt;li class='xr-section-item'>&lt;input id='section-b34adc82-ad8a-435a-bbbf-862bcf4fd005' class='xr-section-summary-in' type='checkbox' checked>&lt;label for='section-b34adc82-ad8a-435a-bbbf-862bcf4fd005' class='xr-section-summary' >Coordinates: &lt;span>(4)&lt;/span>&lt;/label>&lt;div class='xr-section-inline-details'>&lt;/div>&lt;div class='xr-section-details'>&lt;ul class='xr-var-list'>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>time&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(t_dim)&lt;/div>&lt;div class='xr-var-dtype'>datetime64[ns]&lt;/div>&lt;div class='xr-var-preview xr-preview'>2007-01-10 &amp;hellip; 2007-01-12&lt;/div>&lt;input id='attrs-2da50110-406b-4496-808d-b27650687cd3' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-2da50110-406b-4496-808d-b27650687cd3' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-814e5038-a267-426a-a9a3-3579193e7a12' class='xr-var-data-in' type='checkbox'>&lt;label for='data-814e5038-a267-426a-a9a3-3579193e7a12' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array(['2007-01-10T00:00:00.000000000', '2007-01-10T00:15:00.000000000',
'2007-01-10T00:30:00.000000000', '2007-01-10T00:45:00.000000000',
'2007-01-10T01:00:00.000000000', '2007-01-10T01:15:00.000000000',
'2007-01-10T01:30:00.000000000', '2007-01-10T01:45:00.000000000',
'2007-01-10T02:00:00.000000000', '2007-01-10T02:15:00.000000000',
'2007-01-10T02:30:00.000000000', '2007-01-10T02:45:00.000000000',
'2007-01-10T03:00:00.000000000', '2007-01-10T03:15:00.000000000',
'2007-01-10T03:30:00.000000000', '2007-01-10T03:45:00.000000000',
'2007-01-10T04:00:00.000000000', '2007-01-10T04:15:00.000000000',
'2007-01-10T04:30:00.000000000', '2007-01-10T04:45:00.000000000',
'2007-01-10T05:00:00.000000000', '2007-01-10T05:15:00.000000000',
'2007-01-10T05:30:00.000000000', '2007-01-10T05:45:00.000000000',
'2007-01-10T06:00:00.000000000', '2007-01-10T06:15:00.000000000',
'2007-01-10T06:30:00.000000000', '2007-01-10T06:45:00.000000000',
'2007-01-10T07:00:00.000000000', '2007-01-10T07:15:00.000000000',
'2007-01-10T07:30:00.000000000', '2007-01-10T07:45:00.000000000',
'2007-01-10T08:00:00.000000000', '2007-01-10T08:15:00.000000000',
'2007-01-10T08:30:00.000000000', '2007-01-10T08:45:00.000000000',
'2007-01-10T09:00:00.000000000', '2007-01-10T09:15:00.000000000',
'2007-01-10T09:30:00.000000000', '2007-01-10T09:45:00.000000000',
&amp;hellip;
'2007-01-11T14:30:00.000000000', '2007-01-11T14:45:00.000000000',
'2007-01-11T15:00:00.000000000', '2007-01-11T15:15:00.000000000',
'2007-01-11T15:30:00.000000000', '2007-01-11T15:45:00.000000000',
'2007-01-11T16:00:00.000000000', '2007-01-11T16:15:00.000000000',
'2007-01-11T16:30:00.000000000', '2007-01-11T16:45:00.000000000',
'2007-01-11T17:00:00.000000000', '2007-01-11T17:15:00.000000000',
'2007-01-11T17:30:00.000000000', '2007-01-11T17:45:00.000000000',
'2007-01-11T18:00:00.000000000', '2007-01-11T18:15:00.000000000',
'2007-01-11T18:30:00.000000000', '2007-01-11T18:45:00.000000000',
'2007-01-11T19:00:00.000000000', '2007-01-11T19:15:00.000000000',
'2007-01-11T19:30:00.000000000', '2007-01-11T19:45:00.000000000',
'2007-01-11T20:00:00.000000000', '2007-01-11T20:15:00.000000000',
'2007-01-11T20:30:00.000000000', '2007-01-11T20:45:00.000000000',
'2007-01-11T21:00:00.000000000', '2007-01-11T21:15:00.000000000',
'2007-01-11T21:30:00.000000000', '2007-01-11T21:45:00.000000000',
'2007-01-11T22:00:00.000000000', '2007-01-11T22:15:00.000000000',
'2007-01-11T22:30:00.000000000', '2007-01-11T22:45:00.000000000',
'2007-01-11T23:00:00.000000000', '2007-01-11T23:15:00.000000000',
'2007-01-11T23:30:00.000000000', '2007-01-11T23:45:00.000000000',
'2007-01-12T00:00:00.000000000'], dtype='datetime64[ns]')&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>longitude&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(id_dim)&lt;/div>&lt;div class='xr-var-dtype'>float64&lt;/div>&lt;div class='xr-var-preview xr-preview'>1.751&lt;/div>&lt;input id='attrs-b5320d7e-4de5-4c4d-a594-ff7c8061b648' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-b5320d7e-4de5-4c4d-a594-ff7c8061b648' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-bafe93f6-1d34-44a4-b261-8e7a37b8a479' class='xr-var-data-in' type='checkbox'>&lt;label for='data-bafe93f6-1d34-44a4-b261-8e7a37b8a479' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([1.75083])&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>latitude&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(id_dim)&lt;/div>&lt;div class='xr-var-dtype'>float64&lt;/div>&lt;div class='xr-var-preview xr-preview'>52.47&lt;/div>&lt;input id='attrs-7927fe2f-b066-428d-89b8-d3695a5a832a' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-7927fe2f-b066-428d-89b8-d3695a5a832a' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-e1a07567-bb1e-4c12-a10c-a90f21f11c9d' class='xr-var-data-in' type='checkbox'>&lt;label for='data-e1a07567-bb1e-4c12-a10c-a90f21f11c9d' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([52.473])&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>id_name&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(id_dim)&lt;/div>&lt;div class='xr-var-dtype'>&amp;lt;U9&lt;/div>&lt;div class='xr-var-preview xr-preview'>'Lowestoft'&lt;/div>&lt;input id='attrs-23663819-924b-4a37-9715-ed37663f8040' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-23663819-924b-4a37-9715-ed37663f8040' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-828d9616-631a-4883-8f11-faa5415d26b3' class='xr-var-data-in' type='checkbox'>&lt;label for='data-828d9616-631a-4883-8f11-faa5415d26b3' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array(['Lowestoft'], dtype='&amp;lt;U9')&lt;/pre>&lt;/div>&lt;/li>&lt;/ul>&lt;/div>&lt;/li>&lt;li class='xr-section-item'>&lt;input id='section-c090b5d5-f8e3-400d-8e99-cd5071272f10' class='xr-section-summary-in' type='checkbox' checked>&lt;label for='section-c090b5d5-f8e3-400d-8e99-cd5071272f10' class='xr-section-summary' >Data variables: &lt;span>(2)&lt;/span>&lt;/label>&lt;div class='xr-section-inline-details'>&lt;/div>&lt;div class='xr-section-details'>&lt;ul class='xr-var-list'>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>ssh&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(id_dim, t_dim)&lt;/div>&lt;div class='xr-var-dtype'>float64&lt;/div>&lt;div class='xr-var-preview xr-preview'>2.818 2.823 2.871 &amp;hellip; 3.257 3.371&lt;/div>&lt;input id='attrs-35323129-f206-4486-8284-25ffe3eab6da' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-35323129-f206-4486-8284-25ffe3eab6da' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-f2f6853d-9cef-4b24-a8f7-25ec995fea6b' class='xr-var-data-in' type='checkbox'>&lt;label for='data-f2f6853d-9cef-4b24-a8f7-25ec995fea6b' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([[ 2.818, 2.823, 2.871, 2.931, 2.961, 2.979, 2.953, 2.913,
2.864, 2.806, 2.723, 2.664, 2.606, 2.511, 2.43 , 2.379,
2.296, 2.201, 2.105, 2.006, 1.908, 1.801, 1.684, 1.579,
1.494, 1.402, 1.306, 1.233, 1.171, 1.102, 1.054, 1.028,
0.989, 0.97 , 0.983, 1.004, 1.026, 1.068, 1.153, 1.225,
1.296, 1.362, 1.436, 1.481, 1.536, 1.615, 1.695, 1.726,
1.802, 1.842, 1.86 , 1.872, 1.897, 1.912, 1.946, 1.994,
2.006, 2.028, 2.067, 2.081, 2.098, 2.137, 2.113, 2.068,
2.053, 1.985, 1.917, 1.869, 1.803, 1.695, 1.642, 1.545,
1.463, 1.463, 1.466, 1.462, 1.476, 1.524, 1.574, 1.633,
1.661, 1.717, 1.818, 1.918, 2.018, 2.093, 2.14 , 2.223,
2.278, 2.303, 2.372, 2.375, 2.395, 2.468, 2.481, 2.487,
2.535, 2.543, 2.578, 2.621, 2.627, 2.626, 2.585, 2.563,
2.529, 2.451, 2.335, 2.207, 2.086, 1.982, 1.855, 1.741,
1.618, 1.531, 1.429, 1.342, 1.246, 1.141, 1.031, 0.902,
0.784, 0.673, 0.571, 0.457, 0.323, 0.203, 0.13 , 0.056,
-0.028, -0.077, -0.093, -0.143, -0.181, -0.211, -0.217, -0.182,
-0.1 , -0.046, 0.02 , 0.121, 0.247, 0.358, 0.468, 0.65 ,
0.845, 0.987, 1.059, 1.199, 1.322, 1.38 , 1.465, 1.519,
1.559, 1.691, 1.775, 1.844, 2.019, 2.113, 2.159, 2.266,
2.311, 2.406, 2.512, 2.533, 2.43 , 2.309, 2.185, 2.136,
2.086, 2.066, 2.114, 2.114, 2.051, 2.033, 2.055, 2.1 ,
2.192, 2.278, 2.334, 2.421, 2.497, 2.548, 2.603, 2.679,
2.803, 2.859, 2.875, 3.001, 3.075, 3.135, 3.214, 3.257,
3.371]])&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>qc_flags&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(id_dim, t_dim)&lt;/div>&lt;div class='xr-var-dtype'>int64&lt;/div>&lt;div class='xr-var-preview xr-preview'>1 1 1 1 1 1 1 1 &amp;hellip; 1 1 1 1 1 1 1 1&lt;/div>&lt;input id='attrs-09debbef-6145-45fe-a0af-2cddf12522f7' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-09debbef-6145-45fe-a0af-2cddf12522f7' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-a5a16747-56a3-4f26-9ef7-5a64ceb00fa4' class='xr-var-data-in' type='checkbox'>&lt;label for='data-a5a16747-56a3-4f26-9ef7-5a64ceb00fa4' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]])&lt;/pre>&lt;/div>&lt;/li>&lt;/ul>&lt;/div>&lt;/li>&lt;li class='xr-section-item'>&lt;input id='section-0eb237da-5c2b-48c2-b176-8616eeb18a9a' class='xr-section-summary-in' type='checkbox' disabled >&lt;label for='section-0eb237da-5c2b-48c2-b176-8616eeb18a9a' class='xr-section-summary' title='Expand/collapse section'>Attributes: &lt;span>(0)&lt;/span>&lt;/label>&lt;div class='xr-section-inline-details'>&lt;/div>&lt;div class='xr-section-details'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;/li>&lt;/ul>&lt;/div>&lt;/div>&lt;/p>
&lt;p>An example data variable could be ssh, or ntr (non-tidal residual). This object can also be used for other instrument types, not just tide gauges. For example moorings.&lt;/p>
&lt;p>Every id index for this object should use the same time coordinates. Therefore, timeseries need to be aligned before being placed into the object. If there is any padding needed, then NaNs should be used. NaNs should also be used for quality control/data rejection.&lt;/p>
&lt;p>For the rest of our examples, we will use data from multiple tide gauges
on the same time dimension. It will be read in from a simple netCDF file:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># Create the object and then inset the netcdf dataset&lt;/span>
&lt;span style="color:#000">tt&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">xr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">open_dataset&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">fn_tg&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">obs&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">coast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Tidegauge&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">tt&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">obs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">obs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">set_coords&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;time&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Tidegauge object at 0x55fc4fb4cfc0 initialised
&lt;/code>&lt;/pre>
&lt;p>Tidegauge has ready made quick plotting routines for viewing time series and tide gauge location. To look at the tide gauge location:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">fig&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ax&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">obs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">plot_on_map&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>/usr/share/miniconda/envs/coast/lib/python3.8/site-packages/cartopy/io/__init__.py:241: DownloadWarning: Downloading: https://naturalearth.s3.amazonaws.com/50m_physical/ne_50m_coastline.zip
warnings.warn(f'Downloading: {url}', DownloadWarning)
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://british-oceanographic-data-centre.github.io/COAsT/COAsT/tidegauge_validation_tutorial_files/tidegauge_validation_tutorial_15_1.png" alt="png">&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87">id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;span style="color:#000">obs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ssh&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#204a87">id&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">rename&lt;/span>&lt;span style="color:#000;font-weight:bold">({&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;t_dim&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;time&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">})&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">plot&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># rename time dimension to enable automatic x-axis labelling&lt;/span>
&lt;span style="color:#000">plt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">show&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://british-oceanographic-data-centre.github.io/COAsT/COAsT/tidegauge_validation_tutorial_files/tidegauge_validation_tutorial_16_0.png" alt="png">&lt;/p>
&lt;p>Note that start and end dates can also be specified for the &lt;code>Tidegauge.plot_timeseries()&lt;/code> method.&lt;/p>
&lt;p>We can do some simple spatial and temporal manipulations of this data:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># Cut out a geographical box&lt;/span>
&lt;span style="color:#000">obs_cut&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">obs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">subset_indices_lonlat_box&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">lonbounds&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;span style="color:#000">latbounds&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">50&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">55&lt;/span>&lt;span style="color:#000;font-weight:bold">])&lt;/span>
&lt;span style="color:#000">fig&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ax&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">obs_cut&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">plot_on_map&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Tidegauge object at 0x55fc4fb4cfc0 initialised
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://british-oceanographic-data-centre.github.io/COAsT/COAsT/tidegauge_validation_tutorial_files/tidegauge_validation_tutorial_18_1.png" alt="png">&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># Cut out a time window&lt;/span>
&lt;span style="color:#000">obs_cut&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">obs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">time_slice&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span> &lt;span style="color:#000">date0&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">datetime&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2007&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span> &lt;span style="color:#000">date1&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">datetime&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2007&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">31&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Tidegauge object at 0x55fc4fb4cfc0 initialised
&lt;/code>&lt;/pre>
&lt;h3 id="gridded-model-comparison">Gridded model comparison&lt;/h3>
&lt;p>To compare our observations to the model, we will interpolate a model variable to the same time and geographical space as the tidegauge. This is done using the &lt;code>obs_operator()&lt;/code> method.&lt;/p>
&lt;p>But first load some gridded data and manipulate some variable names for convenience&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">nemo&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">coast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Gridded&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">fn_dat&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">fn_dom&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">multiple&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#3465a4">True&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">config&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">fn_config&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Rename depth_0 to be depth&lt;/span>
&lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">rename&lt;/span>&lt;span style="color:#000;font-weight:bold">({&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;depth_0&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;depth&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">})&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#nemo.dataset = nemo.dataset[[&amp;#34;ssh&amp;#34;, &amp;#34;landmask&amp;#34;]]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>interpolate model onto obs locations&lt;/p>
&lt;pre>&lt;code>tidegauge_from_model = obs.obs_operator(nemo, time_interp='nearest')
&lt;/code>&lt;/pre>&lt;p>Doing this would create a new interpolated tidegauge called &lt;code>tidegauge_from_model&lt;/code>
Take a look at &lt;code>tidegauge_from_model.dataset&lt;/code> to see for yourself. If a &lt;code>landmask&lt;/code>
variable is present in the &lt;code>Gridded&lt;/code> dataset then the nearest wet points will
be taken. Otherwise, just the nearest point is taken. If &lt;code>landmask&lt;/code> is required
but not present you will need to insert it into the dataset yourself. For nemo
data, you could use the &lt;code>bottom_level&lt;/code> or &lt;code>mbathy&lt;/code> variables to do this. E.g:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># Create a landmask array and put it into the nemo object.&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Here, using the bottom_level == 0 variable from the domain file is enough.&lt;/span>
&lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;landmask&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">bottom_level&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Then do the interpolation&lt;/span>
&lt;span style="color:#000">tidegauge_from_model&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">obs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">obs_operator&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">time_interp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;nearest&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Calculating spatial indices.
Calculating time indices.
Indexing model data at tide gauge locations..
Calculating interpolation distances.
Interpolating in time...
Tidegauge object at 0x55fc4fb4cfc0 initialised
&lt;/code>&lt;/pre>
&lt;p>However, the new &lt;code>tidegauge_from_model&lt;/code> will the same number of time entries as the &lt;code>obs&lt;/code> data (rather than the model data). So, for a more useful demonstration we trim the observed gauge data so it better matches the model data.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># Shift the timestamp so it overlaps with the tidegauge data - Not ideal but this is only a demo&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#obs.dataset.coords[&amp;#34;time&amp;#34;] = obs.dataset.coords[&amp;#34;time&amp;#34;] + 1000000000 * 3600 * 24 * 365 * 3&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Cut down data to be only in 2007 to match model data.&lt;/span>
&lt;span style="color:#000">start_date&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">datetime&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2007&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">end_date&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">datetime&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2007&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">31&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">obs&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">obs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">time_slice&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">start_date&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">end_date&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Tidegauge object at 0x55fc4fb4cfc0 initialised
&lt;/code>&lt;/pre>
&lt;h3 id="interpolate-model-data-onto-obs-locations">Interpolate model data onto obs locations&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">model_timeseries&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">obs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">obs_operator&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># In this case, transpose the interpolated dataset&lt;/span>
&lt;span style="color:#000">model_timeseries&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">model_timeseries&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">transpose&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Calculating spatial indices.
Calculating time indices.
Indexing model data at tide gauge locations..
Calculating interpolation distances.
Interpolating in time...
Tidegauge object at 0x55fc4fb4cfc0 initialised
&lt;/code>&lt;/pre>
&lt;p>For a good comparison, we would like to make sure that both the observed and
modelled &lt;code>Tidegauge&lt;/code> objects contain the same missing values. &lt;code>TidegaugeAnalysis&lt;/code>
contains a routine for ensuring this. First create our analysis object:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># This routine searches for missing values in each dataset and applies them&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># equally to each corresponding dataset&lt;/span>
&lt;span style="color:#000">tganalysis&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">coast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">TidegaugeAnalysis&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000">obs_new&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">model_new&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tganalysis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">match_missing_values&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">obs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ssh&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">model_timeseries&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ssh&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Tidegauge object at 0x55fc4fb4cfc0 initialised
Tidegauge object at 0x55fc4fb4cfc0 initialised
&lt;/code>&lt;/pre>
&lt;p>Although we input data arrays to the above routine, it returns two new Tidegauge objects. Now you have equivalent and comparable sets of time series that can be easily compared.&lt;/p>
&lt;h3 id="harmonic-analysis--non-tidal-residuals">Harmonic Analysis &amp;amp; Non tidal-Residuals&lt;/h3>
&lt;p>The &lt;code>Tidegauge&lt;/code> object contains some routines which make harmonic analysis and
the calculation/comparison of non-tidal residuals easier. Harmonic analysis is
done using the &lt;code>utide&lt;/code> package. Please see &lt;a href="https://pypi.org/project/UTide/">here&lt;/a> for more info.&lt;/p>
&lt;p>First we can use the &lt;code>TidegaugeAnalysis&lt;/code> class to do a harmonic analysis. Suppose
we have two &lt;code>Tidegauge&lt;/code> objects called &lt;code>obs&lt;/code> and &lt;code>model_timeseries&lt;/code> generated from tidegauge observations and model simulations respectively.&lt;/p>
&lt;p>We can subtract means from all time series:&lt;/p>
&lt;p>Then subtract means from all the time series&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># Subtract means from all time series&lt;/span>
&lt;span style="color:#000">obs_new&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tganalysis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">demean_timeseries&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">obs_new&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">model_new&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tganalysis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">demean_timeseries&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">model_new&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Now you have equivalent and comparable sets of time series that can be&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># easily compared.&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Tidegauge object at 0x55fc4fb4cfc0 initialised
Tidegauge object at 0x55fc4fb4cfc0 initialised
&lt;/code>&lt;/pre>
&lt;p>Then we can apply the harmonic analysis (though the example data is too short for this example to be that meaningful):&lt;/p>
&lt;h3 id="calculate-non-tidal-residuals">Calculate non tidal residuals&lt;/h3>
&lt;p>First, do a harmonic analysis. This routine uses utide&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">ha_mod&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tganalysis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">harmonic_analysis_utide&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">model_new&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ssh&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">min_datapoints&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">ha_obs&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tganalysis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">harmonic_analysis_utide&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">obs_new&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ssh&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">min_datapoints&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
solve: matrix prep ... solution ... done.
&lt;/code>&lt;/pre>
&lt;p>The &lt;code>harmonic_analysis_utide&lt;/code> routine returns a list of &lt;code>utide&lt;/code> structure object,
one for each &lt;code>id_dim&lt;/code> in the &lt;code>Tidegauge&lt;/code> object. It can be passed any of the
arguments that go to &lt;code>utide&lt;/code>. It also has an additional argument &lt;code>min_datapoints&lt;/code>
which determines a minimum number of data points for the harmonics analysis.
If a tidegauge &lt;code>id_dim&lt;/code> has less than this number, it will not return an analysis.&lt;/p>
&lt;p>Now, create new &lt;code>TidegaugeMultiple&lt;/code> objects containing reconstructed tides:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">tide_mod&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tganalysis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">reconstruct_tide_utide&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">model_new&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ha_mod&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">tide_obs&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tganalysis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">reconstruct_tide_utide&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">obs_new&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ha_obs&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
Tidegauge object at 0x55fc4fb4cfc0 initialised
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
prep/calcs ... done.
Tidegauge object at 0x55fc4fb4cfc0 initialised
&lt;/code>&lt;/pre>
&lt;p>Get new TidegaugeMultiple objects containing non tidal residuals:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">ntr_mod&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tganalysis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">calculate_non_tidal_residuals&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">model_new&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ssh&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">tide_mod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">reconstructed&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">ntr_obs&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tganalysis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">calculate_non_tidal_residuals&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">obs_new&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ssh&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">tide_obs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">reconstructed&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Tidegauge object at 0x55fc4fb4cfc0 initialised
Tidegauge object at 0x55fc4fb4cfc0 initialised
&lt;/code>&lt;/pre>
&lt;p>By default, this routines will apply &lt;code>scipy.signal.savgol_filter&lt;/code> to the non-tidal residuals
to remove some noise. This can be switched off using &lt;code>apply_filter = False&lt;/code>.&lt;/p>
&lt;p>The Doodson X0 filter is an alternative way of estimating non-tidal residuals:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">dx0&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tganalysis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">doodson_x0_filter&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">obs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ssh&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Tidegauge object at 0x55fc4fb4cfc0 initialised
&lt;/code>&lt;/pre>
&lt;p>This will return a new Tidegauge() object containing filtered ssh data.&lt;/p>
&lt;h3 id="other-tidegaugeanalysis-methods">Other TidegaugeAnalysis methods&lt;/h3>
&lt;h4 id="calculate-errors">Calculate errors&lt;/h4>
&lt;p>The difference() routine will calculate differences, absolute_differences and squared differenced for all variables:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">ntr_diff&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tganalysis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">difference&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ntr_obs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">ntr_mod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">ssh_diff&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tganalysis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">difference&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">obs_new&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">model_new&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Tidegauge object at 0x55fc4fb4cfc0 initialised
Tidegauge object at 0x55fc4fb4cfc0 initialised
&lt;/code>&lt;/pre>
&lt;p>We can then easily get mean errors, MAE and MSE&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">mean_stats&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ntr_diff&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">mean&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dim&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;t_dim&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">skipna&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#3465a4">True&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="threshold-statistics-for-non-tidal-residuals">Threshold Statistics for non-tidal residuals&lt;/h4>
&lt;p>This is a simple extreme value analysis of whatever data you use. It will count the number of peaks and the total time spent over each threshold provided. It will also count the numbers of daily and monthly maxima over each threshold. To this, a Tidegauge object and an array of thresholds (in metres) should be passed:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">thresh_mod&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tganalysis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">threshold_statistics&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ntr_mod&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">thresholds&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">arange&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0.2&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;span style="color:#000">thresh_obs&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tganalysis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">threshold_statistics&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ntr_obs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">thresholds&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">arange&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0.2&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Tidetable tutorial</title><link>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/tidegauge/tidetable_tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/tidegauge/tidetable_tutorial/</guid><description>
&lt;h3 id="tutorial-for-processing-tabulated-tide-gauge-data">Tutorial for processing tabulated tide gauge data.&lt;/h3>
&lt;p>Tidal highs and lows can be scraped from a website such as:&lt;br>
&lt;a href="https://www.ntslf.org/tides/tidepred?port=Liverpool">https://www.ntslf.org/tides/tidepred?port=Liverpool&lt;/a>&lt;br>
&lt;img src="https://www.ntslf.org/files/ntslf_php/plottide.php?port=Liverpool" alt="NTSLF tidal predictions">&lt;/p>
&lt;p>and format them into a csv file:&lt;br>&lt;/p>
&lt;p>LIVERPOOL (GLADSTONE DOCK) TZ: UT(GMT)/BST Units: METRES Datum: Chart Datum&lt;br>
01/10/2020 06:29 1.65&lt;br>
01/10/2020 11:54 9.01&lt;br>
01/10/2020 18:36 1.87&lt;br>&lt;/p>
&lt;p>The data can be used in the following demonstration.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">coast&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">numpy&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">np&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Load and plot High and Low Water data.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;load and plot HLW data&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">filnam&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./example_files/Gladstone_2020-10_HLW.txt&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>load and plot HLW data
&lt;/code>&lt;/pre>
&lt;p>Set the start and end dates.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">date_start&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime64&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2020-10-12 23:59&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">date_end&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime64&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2020-10-14 00:01&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Initiate a TideGauge object, if a filename is passed it assumes it is a GESLA type object.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">tg&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">coast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Tidegauge&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Tidegauge object at 0x55d21cc47fc0 initialised
&lt;/code>&lt;/pre>
&lt;p>Specify the data read as a High Low Water dataset.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">tg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">read_hlw&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">filnam&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">date_start&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">date_end&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Show dataset. If timezone is specified then it is presented as requested, otherwise uses UTC.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Try the TideGauge.show() method:&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">tg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">show&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">timezone&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Europe/London&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Try the TideGauge.show() method:
&lt;/code>&lt;/pre>
&lt;p>Do a basic plot of these points.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">tg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">plot&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">scatter&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">x&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;time&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">y&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;ssh&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>&amp;lt;matplotlib.collections.PathCollection at 0x7fd45352c850&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://british-oceanographic-data-centre.github.io/COAsT/COAsT/tidetable_tutorial_files/tidetable_tutorial_14_1.png" alt="png">&lt;/p>
&lt;p>There is a method to locate HLW events around an approximate date and time.
First state the time of interest.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">time_guess&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime64&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2020-10-13 12:48&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then recover all the HLW events in a +/- window, of specified size (iteger hrs).
The default winsize = 2 (hrs).&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">HLW&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">get_tide_table_times&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime64&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2020-10-13 12:48&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span> &lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;window&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">winsize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">24&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Alternatively recover the closest HLW event to the input timestamp.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">HLW&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">get_tide_table_times&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime64&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2020-10-13 12:48&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span> &lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;nearest_1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Or the nearest two events to the input timestamp.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">HLW&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">get_tide_table_times&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime64&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2020-10-13 12:48&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span> &lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;nearest_2&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Extract the Low Tide value.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Try the TideGauge.get_tidetabletimes() methods:&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;LT:&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">HLW&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">argmin&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">HLW&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">data&lt;/span>&lt;span style="color:#000;font-weight:bold">)]&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">values&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;m at&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">HLW&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">argmin&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">HLW&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">data&lt;/span>&lt;span style="color:#000;font-weight:bold">)]&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">values&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>Try the TideGauge.get_tidetabletimes() methods:
LT: 2.83 m at 2020-10-13T14:36:00.000000000
&lt;/code>&lt;/pre>
&lt;p>Extract the High Tide value.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;HT:&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">HLW&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">argmax&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">HLW&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">data&lt;/span>&lt;span style="color:#000;font-weight:bold">)]&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">values&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;m at&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">HLW&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">argmax&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">HLW&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">data&lt;/span>&lt;span style="color:#000;font-weight:bold">)]&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">values&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>HT: 8.01 m at 2020-10-13T07:59:00.000000000
&lt;/code>&lt;/pre>
&lt;p>Or use the the nearest High Tide method to get High Tide.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">HT&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">get_tide_table_times&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime64&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2020-10-13 12:48&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span> &lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;nearest_HW&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;HT:&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">HT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">values&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;m at&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">HT&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">time&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">values&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>HT: [8.01] m at 2020-10-13T07:59:00.000000000
&lt;/code>&lt;/pre>
&lt;p>The get_tidetabletimes() method can take extra paremeters such as a window size, an integer number of hours to seek either side of the guess.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">HLW&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">get_tide_table_times&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime64&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2020-10-13 12:48&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span> &lt;span style="color:#000">winsize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;nearest_1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">HLW&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">tg&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">get_tide_table_times&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime64&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2020-10-13 12:48&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span> &lt;span style="color:#000">winsize&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">method&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;nearest_1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>