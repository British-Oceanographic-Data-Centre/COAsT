<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>COAsT â€“ General utility and analysis tools</title><link>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/general/</link><description>Recent content in General utility and analysis tools on COAsT</description><generator>Hugo -- gohugo.io</generator><atom:link href="https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/general/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: Climatology tutorial</title><link>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/general/climatology_tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/general/climatology_tutorial/</guid><description>
&lt;p>This demonstration has two parts:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Climatology.make_climatology():
This demonstration uses the COAsT package to calculate a climatological mean of an
input dataset at a desired output frequency. Output can be written straight
to file.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Climatology.make_multiyear_climatology():
This demonstrations uses the COAsT package to calculate a climatological mean of an
input dataset at a desired output frequency, over multiple years, but will work with single year datasets too.&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>COAsT and xarray should preserve any lazy loading and chunking. If defined
properly in the read function, memory issues can be avoided and parallel
processes will automatically be used.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">coast&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="usage-of-coastclimatologymake_climatology">Usage of coast.Climatology.make_climatology().&lt;/h3>
&lt;p>Calculates mean over a given period of time. This doesn&amp;rsquo;t take different years into account, unless using the
&amp;lsquo;years&amp;rsquo; frequency.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">root&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Paths to a single or multiple data files.&lt;/span>
&lt;span style="color:#000">dn_files&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">root&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./example_files/&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_nemo_dat&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">dn_files&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;coast_example_nemo_data.nc&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_nemo_config&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">root&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./config/example_nemo_grid_t.json&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Set path for domain file if required.&lt;/span>
&lt;span style="color:#000">fn_nemo_dom&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">dn_files&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;coast_example_nemo_domain.nc&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Define output filepath (optional: None or str)&lt;/span>
&lt;span style="color:#000">fn_out&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#3465a4">None&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Read in multiyear data (This example uses NEMO data from a single file.)&lt;/span>
&lt;span style="color:#000">nemo_data&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">coast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Gridded&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">fn_data&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">fn_nemo_dat&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">fn_domain&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">fn_nemo_dom&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">config&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">fn_nemo_config&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Calculate the climatology for temperature and sea surface height (ssh) as an example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># Select specific data variables.&lt;/span>
&lt;span style="color:#000">data&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">nemo_data&lt;/span>&lt;span style="color:#000;font-weight:bold">[[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;temperature&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ssh&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]]&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Define frequency -- Any xarray time string: season, month, etc&lt;/span>
&lt;span style="color:#000">climatology_frequency&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;month&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Calculate the climatology and write to file.&lt;/span>
&lt;span style="color:#000">clim&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">coast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Climatology&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000">clim_mean&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">clim&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">make_climatology&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">data&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">climatology_frequency&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">fn_out&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">fn_out&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Below shows the structure of a dataset returned, containing 1 month worth of meaned temperature and sea surface height data:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic">#clim_mean # uncomment to print data object summary&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="usage-of-coastclimatologymultiyear_averages">Usage of coast.Climatology.multiyear_averages().&lt;/h3>
&lt;p>Calculates the mean over a specified period and groups the data by year-period. Here a fully working example is not available as multi-year example data is not in the &lt;code>example_files&lt;/code>. However a working example using synthetic data is given in: &lt;code>tests/test_climatology.py&lt;/code>. This method is designed to be compatible with multi-year datasets, but will work with single year datasets too.&lt;/p>
&lt;pre>&lt;code># Paths to a single or multiple data files.
fn_nemo_data = &amp;quot;/path/to/nemo/*.nc&amp;quot;
# Set path for domain file if required.
fn_nemo_domain = None
# Set path to configuration file
fn_nemo_config = &amp;quot;/path/to/nemo/*.json&amp;quot;
# Read in multiyear data (This example uses NEMO data from multiple datafiles.)
nemo_data = coast.Gridded(fn_data=fn_nemo_data,
fn_domain=fn_nemo_domain,
config=fn_nemo_config,
multiple=True).dataset
&lt;/code>&lt;/pre>&lt;p>Now calculate temperature and ssh means of each season across multiple years for specified data, using seasons module to specify time period.&lt;/p>
&lt;pre>&lt;code>from coast._utils import seasons
# Select specific data variables.
data = nemo_data[[&amp;quot;temperature&amp;quot;, &amp;quot;ssh&amp;quot;]]
clim = coast.Climatology()
# SPRING, SUMMER, AUTUMN, WINTER, ALL are valid values for seasons.
clim_multiyear = clim.multiyear_averages(data, seasons.ALL, time_var='time', time_dim='t_dim')
# Or explicitly defining specific month periods.
# A list of tuples defining start and end month integers. The start months should be in chronological order.
# (you may need to read/load the data again if it gives an error)
month_periods = [(1,2), (12,2)] # Specifies January -&amp;gt; February and December -&amp;gt; February for each year of data.
clim_multiyear = clim.multiyear_averages(data, month_periods , time_var='time', time_dim='t_dim')
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Dask wrapper template tutorial</title><link>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/general/dask_wrapper_template_tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/general/dask_wrapper_template_tutorial/</guid><description>
&lt;p>The notebook proves a template and some instruction on how to create a dask wrapper&lt;/p>
&lt;h3 id="motivation">Motivation&lt;/h3>
&lt;p>Start with an &lt;code>xarray.DataArray&lt;/code> object called &lt;code>myDataArra&lt;/code>y, that we want to pass into a function. That function will perform eager evaluation and return a numpy array, but we want lazy evaluation with the possibility to allow dask parallelism. See worked example in &lt;code>Process_data.seasonal_decomposition&lt;/code>.&lt;/p>
&lt;h3 id="import-dependencies">Import dependencies&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">dask.array&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">da&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">from&lt;/span> &lt;span style="color:#000">dask&lt;/span> &lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">delayed&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">xarray&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">xr&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">numpy&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">np&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="step-1-optional-allows-dask-to-distribute-computation-across-multiple-cores-if-not-interested-see-comment-2">Step 1. (optional: allows dask to distribute computation across multiple cores, if not interested see comment 2)&lt;/h3>
&lt;p>Partition data in &lt;code>myDataArray&lt;/code> by chunking it up as desired. Note that chunking dimensions need to make sense for your particular problem! Here we just chunk along &lt;code>dim_2&lt;/code>&lt;/p>
&lt;pre>&lt;code>myDataArray = myDataArray.chunk({&amp;quot;dim_1&amp;quot;: myDataArray.dim_1.size, &amp;quot;dim_2&amp;quot;: chunksize}) # can be more dimensions
&lt;/code>&lt;/pre>&lt;p>Then create a list containing all the array chunks as dask.delayed objects (e.g. 4 chunks =&amp;gt; list contain 4 delayed objects)&lt;/p>
&lt;pre>&lt;code>myDataArray_partitioned = myDataArray.data.to_delayed().ravel()
&lt;/code>&lt;/pre>&lt;h4 id="comment-1">Comment 1&lt;/h4>
&lt;p>There are different ways to partition your data. For example, if you start off with a numpy array rather than an xarray DataArray you can just iterate over the array and partition it that way (the partitions do NOT need to be dask.delayed objects). For example see the very simple case here: &lt;a href="https://docs.dask.org/en/stable/delayed.html">https://docs.dask.org/en/stable/delayed.html&lt;/a>&lt;/p>
&lt;p>The method described in 1 is just very convenient for DataArrays where the multi-dimensional chunks may be the desired way to partition the data.&lt;/p>
&lt;h3 id="step-2">Step 2.&lt;/h3>
&lt;p>Call your eager evaluating function using dask.delayed and pass in your data. This returns a list containing the outputs from the function as dask.delayed objects. The list will have the same length as &lt;code>myDataArray_partitioned&lt;/code>&lt;/p>
&lt;pre>&lt;code>delayed_myFunction_output = [
delayed(myFunction)(aChunk, other_args_for_myFunction) for aChunk in myDataArray_partitioned
]
&lt;/code>&lt;/pre>&lt;h3 id="step-3">Step 3.&lt;/h3>
&lt;p>Convert the lists of delayed objects to lists of dask arrays to allow array operations. It&amp;rsquo;s possible this step is not necessary!&lt;/p>
&lt;pre>&lt;code>dask_array_list = []
for chunk_idx, aChunk in enumerate(delayed_myFunction_output):
# When converting from dask.delayed to dask.array, you must know the shape of the
# array. In this example we know this from the chunk sizes of the original DataArray
chunk_shape = (myDataArray.chunks[0][0], myDataArray.chunks[1][chunk_idx])
dask_array_list.append(da.from_delayed(aChunk, shape=chunk_shape, dtype=float))
&lt;/code>&lt;/pre>&lt;h3 id="step-4">Step 4.&lt;/h3>
&lt;p>Concatenate the array chunks together to get a single dask.array. This can be assigned to a new DataArray as desired.&lt;/p>
&lt;pre>&lt;code>myOutputArray = da.concatenate(dask_array_list, axis=1)
&lt;/code>&lt;/pre>&lt;h4 id="comment-2">Comment 2&lt;/h4>
&lt;p>If you skipped step 1., i.e. just want a lazy operation and no parallelism, you can just do this&lt;/p>
&lt;pre>&lt;code>myOutputArray = da.from_delayed(
delayed(myFunction)(myDataArray, other_args_for_myFunction), shape=myDataArray.shape, dtype=float
)
&lt;/code>&lt;/pre>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Eof tutorial</title><link>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/general/eof_tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/general/eof_tutorial/</guid><description>
&lt;p>Using COAsT to compute the Empirical Orthogonal Functions (EOFs) of your data&lt;/p>
&lt;h3 id="relevant-imports-and-filepath-configuration">Relevant imports and filepath configuration&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># Begin by importing coast and other packages&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">coast&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">xarray&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">xr&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">matplotlib.pyplot&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">plt&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Define some file paths&lt;/span>
&lt;span style="color:#000">root&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./&amp;#34;&lt;/span>
&lt;span style="color:#000">dn_files&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">root&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./example_files/&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_nemo_dat_t&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">dn_files&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;nemo_data_T_grid.nc&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_nemo_dom&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">dn_files&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;coast_example_nemo_domain.nc&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_nemo_config&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">root&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./config/example_nemo_grid_t.json&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="loading-data">Loading data&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># Load data variables that are on the NEMO t-grid&lt;/span>
&lt;span style="color:#000">nemo_t&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">coast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Gridded&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span> &lt;span style="color:#000">fn_data&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">fn_nemo_dat_t&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">fn_domain&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">fn_nemo_dom&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">config&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">fn_nemo_config&lt;/span> &lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="compute-eof">Compute EOF&lt;/h3>
&lt;p>For a variable (or subset of a variable) with two spatial dimensions and one temporal dimension, i.e. (x,y,t), the EOFs, temporal projections and variance explained can be computed by calling the â€˜eofsâ€™ method, and passing in the ssh DataArray as an argument. For example, for the sea surface height field, we can do&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">eof_data&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">coast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">compute_eofs&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span> &lt;span style="color:#000">nemo_t&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ssh&lt;/span> &lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The method returns an xarray dataset that contains the EOFs, temporal projections and variance as DataArrays&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic">#eof_data # uncomment to print data object summary&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="inspect-eofs">Inspect EOFs&lt;/h3>
&lt;p>The variance explained of the first four modes is&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># eof_data.variance.sel(mode=[1,2,3,4]) ## uncomment&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="plotting">Plotting&lt;/h3>
&lt;p>And the EOFs and temporal projections can be quick plotted:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">eof_data&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">EOF&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>&lt;span style="color:#000;font-weight:bold">])&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">plot&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">pcolormesh&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">col&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;mode&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#000">col_wrap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#000">x&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;longitude&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#000">y&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;latitude&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>&amp;lt;xarray.plot.facetgrid.FacetGrid at 0x7f2f88570df0&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://british-oceanographic-data-centre.github.io/COAsT/COAsT/eof_tutorial_files/eof_tutorial_12_1.png" alt="png">&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">eof_data&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">temporal_proj&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>&lt;span style="color:#000;font-weight:bold">])&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">plot&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">col&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;mode&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#000">col_wrap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#000">x&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;time&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>&amp;lt;xarray.plot.facetgrid.FacetGrid at 0x7f2f447cb970&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://british-oceanographic-data-centre.github.io/COAsT/COAsT/eof_tutorial_files/eof_tutorial_13_1.png" alt="png">&lt;/p>
&lt;h3 id="complex-eofs">Complex EOFs&lt;/h3>
&lt;p>The more exotic hilbert complex EOFs can also be computed to investigate the propagation of variability, for example:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">heof_data&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">coast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">compute_hilbert_eofs&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span> &lt;span style="color:#000">nemo_t&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ssh&lt;/span> &lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#heof_data # uncomment to print data object summary&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>now with the modes expressed by their amplitude and phase, the spatial propagation of the variability can be examined through the EOF_phase.&lt;/p></description></item><item><title>Docs: Export to netcdf tutorial</title><link>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/general/export_to_netcdf_tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/general/export_to_netcdf_tutorial/</guid><description>
&lt;p>This is a demonstration script for how to export intermediate data from COAsT
to netCDF files for later analysis or storage.
The tutorial showcases the xarray.to_netcdf() method.
&lt;a href="http://xarray.pydata.org/en/stable/generated/xarray.Dataset.to_netcdf.html">http://xarray.pydata.org/en/stable/generated/xarray.Dataset.to_netcdf.html&lt;/a>&lt;/p>
&lt;h3 id="begin-by-importing-coast-and-other-packages">Begin by importing COAsT and other packages&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">coast&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">xarray&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">xr&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="now-define-some-file-paths">Now define some file paths&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">root&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># And by defining some file paths&lt;/span>
&lt;span style="color:#000">dn_files&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">root&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./example_files/&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_nemo_dat&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">dn_files&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;coast_example_nemo_data.nc&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_nemo_dom&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">dn_files&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;coast_example_nemo_domain.nc&amp;#34;&lt;/span>
&lt;span style="color:#000">config&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">root&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./config/example_nemo_grid_t.json&amp;#34;&lt;/span>
&lt;span style="color:#000">ofile&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;example_export_output.nc&amp;#34;&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># The target filename for output&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="we-need-to-load-in-a-nemo-object-for-doing-nemo-things">We need to load in a NEMO object for doing NEMO things&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">nemo&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">coast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Gridded&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">fn_nemo_dat&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">fn_nemo_dom&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">config&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">config&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="we-can-export-the-whole-xrdataset-to-a-netcdf-file">We can export the whole xr.DataSet to a netCDF file&lt;/h3>
&lt;p>Other file formats are available. From the documentation:&lt;/p>
&lt;ul>
&lt;li>NETCDF4: Data is stored in an HDF5 file, using netCDF4 API features.&lt;/li>
&lt;li>NETCDF4_CLASSIC: Data is stored in an HDF5 file, using only netCDF 3 compatible API features.&lt;/li>
&lt;li>NETCDF3_64BIT: 64-bit offset version of the netCDF 3 file format, which fully supports 2+ GB files, but is only compatible with clients linked against netCDF version 3.6.0 or later.&lt;/li>
&lt;li>NETCDF3_CLASSIC: The classic netCDF 3 file format. It does not handle 2+ GB files very well.&lt;/li>
&lt;/ul>
&lt;p>Mode - &amp;lsquo;w&amp;rsquo; (write) is the default. Other options from the documentation:&lt;/p>
&lt;ul>
&lt;li>mode ({&amp;ldquo;w&amp;rdquo;, &amp;ldquo;a&amp;rdquo;}, default: &amp;ldquo;w&amp;rdquo;) â€“ Write (â€˜wâ€™) or append (â€˜aâ€™) mode.&lt;/li>
&lt;li>If mode=â€™wâ€™, any existing file at this location will be overwritten.&lt;/li>
&lt;li>If mode=â€™aâ€™, existing variables will be overwritten.&lt;/li>
&lt;/ul>
&lt;p>Similarly xr.DataSets collections of variables or xr.DataArray variables can be exported to netCDF for objects in the TRANSECT, TIDEGAUGE, etc classes.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">to_netcdf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ofile&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;w&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">format&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;NETCDF4&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="alternatively-a-single-variable-an-xrdataarray-object-can-be-exported">Alternatively a single variable (an xr.DataArray object) can be exported&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;temperature&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">to_netcdf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ofile&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">format&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;NETCDF4&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="check-the-exported-file-is-as-you-expect">Check the exported file is as you expect&lt;/h3>
&lt;p>Perhaps by using &lt;code>ncdump -h example_export_output.nc&lt;/code>, or load the file and see that the xarray structure is preserved.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87">object&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">xr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">open_dataset&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">ofile&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#204a87">object&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">close&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># close file associated with this object&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Mask maker tutorial</title><link>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/general/mask_maker_tutorial/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/general/mask_maker_tutorial/</guid><description>
&lt;p>A demonstration of the MaskMaker class to build and use regional masking&lt;/p>
&lt;p>MaskMasker is a class of methods to assist with making regional masks within COAsT.
Presently the mask generated are external to MaskMaker.
Masks are constructed as gridded boolean numpy array for each region, which are stacked over a dim_mask dimension.
The mask arrays are generated on a supplied horizontal grid. The masks are then stored in xarray objects along with regions names.&lt;/p>
&lt;p>Examples are given working with Gridded and Profile data.&lt;/p>
&lt;h3 id="relevant-imports-and-filepath-configuration">Relevant imports and filepath configuration&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">coast&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">numpy&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">np&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">from&lt;/span> &lt;span style="color:#000">os&lt;/span> &lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">path&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">matplotlib.pyplot&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">plt&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">matplotlib.colors&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">colors&lt;/span> &lt;span style="color:#8f5902;font-style:italic"># colormap fiddling&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">xarray&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">xr&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># set some paths&lt;/span>
&lt;span style="color:#000">root&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./&amp;#34;&lt;/span>
&lt;span style="color:#000">dn_files&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">root&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./example_files/&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_nemo_grid_t_dat&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">dn_files&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;nemo_data_T_grid_Aug2015.nc&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_nemo_dom&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">dn_files&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;coast_example_nemo_domain.nc&amp;#34;&lt;/span>
&lt;span style="color:#000">config_t&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">root&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./config/example_nemo_grid_t.json&amp;#34;&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="loading-data">Loading data&lt;/h3>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># Create a Gridded object and load in the data:&lt;/span>
&lt;span style="color:#000">nemo&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">coast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Gridded&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">fn_nemo_grid_t_dat&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">fn_nemo_dom&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">config&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">config_t&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="initialise-maskmaker-and-define-target-grid">Initialise MaskMaker and define target grid&lt;/h1>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">mm&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">coast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">MaskMaker&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Define Regional Masks&lt;/span>
&lt;span style="color:#000">regional_masks&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[]&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Define convenient aliases based on nemo data&lt;/span>
&lt;span style="color:#000">lon&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">longitude&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">values&lt;/span>
&lt;span style="color:#000">lat&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">latitude&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">values&lt;/span>
&lt;span style="color:#000">bathy&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">bathymetry&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">values&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="use-maskmaker-to-define-new-regions">Use MaskMaker to define new regions&lt;/h1>
&lt;p>MaskMaker can build a stack of boolean masks in an xarray dataset for regional analysis. Regions can be supplied by providing vertices coordiates to the &lt;code>make_region_from_vertices&lt;/code> method. (Vertices coordinates can be passed as xarray objects or as numpy arrays).
The method returns a numpy array of booleans.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># Draw and fill a square&lt;/span>
&lt;span style="color:#000">vertices_lon&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#000">vertices_lat&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">40&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">60&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">60&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">40&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># input lat/lon as xr.DataArray&lt;/span>
&lt;span style="color:#000">filled1&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">mm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">make_region_from_vertices&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">longitude&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">latitude&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">vertices_lon&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">vertices_lat&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># input lat/lon as np.ndarray&lt;/span>
&lt;span style="color:#000">filled2&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">mm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">make_region_from_vertices&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">longitude&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">values&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">latitude&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">values&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">vertices_lon&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">vertices_lat&lt;/span>
&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">check&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">filled1&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">filled2&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">all&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">f&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;numpy array outputs are the same? {check}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>numpy array outputs are the same? True
&lt;/code>&lt;/pre>
&lt;p>The boolean numpy array can then be converted to an xarray object using &lt;code>make_mask_dataset()&lt;/code> for improved interactions with other xarray objects.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">mask_xr&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">mm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">make_mask_dataset&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">longitude&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">values&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">latitude&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">values&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">filled1&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;h1 id="use-maskmaker-for-predefined-regions">Use MaskMaker for predefined regions&lt;/h1>
&lt;p>The NWS has a number of predefined regions. These are numpy boolean arrays as functions of the specified latitude, longitude and bathymetry. They can be appended into a list of arrays, which can be similarly converted into an xarray object.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">masks_list&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[]&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Add regional mask for whole domain&lt;/span>
&lt;span style="color:#000">masks_list&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">append&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ones&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">lon&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">shape&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Add regional mask for English Channel&lt;/span>
&lt;span style="color:#000">masks_list&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">append&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">region_def_nws_north_north_sea&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">lon&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">lat&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bathy&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;span style="color:#000">masks_list&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">append&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">region_def_nws_south_north_sea&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">lon&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">lat&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bathy&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;span style="color:#000">masks_list&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">append&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">region_def_nws_outer_shelf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">lon&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">lat&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bathy&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;span style="color:#000">masks_list&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">append&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">region_def_nws_norwegian_trench&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">lon&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">lat&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bathy&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;span style="color:#000">masks_list&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">append&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">region_def_nws_english_channel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">lon&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">lat&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bathy&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;span style="color:#000">masks_list&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">append&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">region_def_nws_off_shelf&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">lon&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">lat&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bathy&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;span style="color:#000">masks_list&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">append&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">region_def_nws_irish_sea&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">lon&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">lat&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bathy&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;span style="color:#000">masks_list&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">append&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">region_def_nws_kattegat&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">lon&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">lat&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bathy&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;span style="color:#000">masks_list&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">append&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">region_def_nws_fsc&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">lon&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">lat&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">bathy&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;span style="color:#000">masks_names&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;whole domain&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;northern north sea&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;southern north sea&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;outer shelf&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;norwegian trench&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;english_channel&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;off shelf&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;irish sea&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;kattegat&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;fsc&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>As before the numpy arrays (here as a list) can be converted into an xarray dataset where each mask is separated along the &lt;code>dim_mask&lt;/code> dimension&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">mask_xr&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">mm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">make_mask_dataset&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">lon&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">lat&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">masks_list&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">masks_names&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Inspect mask xarray object structure&lt;/p>
&lt;p>&lt;code>mask_xr&lt;/code>&lt;/p>
&lt;h2 id="plot-masks">Plot masks&lt;/h2>
&lt;p>Inspect the mask with a &lt;code>quick_plot()&lt;/code> method.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">mm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">quick_plot&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mask_xr&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://british-oceanographic-data-centre.github.io/COAsT/COAsT/mask_maker_tutorial_files/mask_maker_tutorial_18_0.png" alt="png">&lt;/p>
&lt;p>NB overlapping regions are not given special treatment, the layers are blindly superimposed on each other. E.g. as demonstrated with &amp;ldquo;Norwegian Trench&amp;rdquo; and &amp;ldquo;off shelf&amp;rdquo;, &amp;ldquo;FSC&amp;rdquo; and &amp;ldquo;off shelf&amp;rdquo;, or &amp;ldquo;whole domain&amp;rdquo; and any other region.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">plt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">subplot&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">mm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">quick_plot&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mask_xr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dim_mask&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">9&lt;/span>&lt;span style="color:#000;font-weight:bold">]))&lt;/span>
&lt;span style="color:#000">plt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">subplot&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">mm&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">quick_plot&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mask_xr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dim_mask&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">5&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">6&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">7&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">8&lt;/span>&lt;span style="color:#000;font-weight:bold">]))&lt;/span>
&lt;span style="color:#000">plt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tight_layout&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="https://british-oceanographic-data-centre.github.io/COAsT/COAsT/mask_maker_tutorial_files/mask_maker_tutorial_20_0.png" alt="png">&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># Show overlap&lt;/span>
&lt;span style="color:#000">mask_xr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">mask&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sum&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dim&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;dim_mask&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">plot&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">levels&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Save if required&lt;/span>
&lt;span style="color:#8f5902;font-style:italic">#plt.savefig(&amp;#39;tmp.png&amp;#39;)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>&amp;lt;matplotlib.collections.QuadMesh at 0x7fc5b3db4a60&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://british-oceanographic-data-centre.github.io/COAsT/COAsT/mask_maker_tutorial_files/mask_maker_tutorial_21_1.png" alt="png">&lt;/p>
&lt;h1 id="regional-analysis-with-profile-data">Regional analysis with Profile data&lt;/h1>
&lt;p>Apply the regional masks to average SST&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># Read EN4 data into profile object&lt;/span>
&lt;span style="color:#000">fn_prof&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">path&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">join&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dn_files&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;coast_example_en4_201008.nc&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">fn_cfg_prof&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">path&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">join&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;config&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;example_en4_profiles.json&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">profile&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">coast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Profile&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">config&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">fn_cfg_prof&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">profile&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">read_en4&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span> &lt;span style="color:#000">fn_prof&lt;/span> &lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>config/example_en4_profiles.json
&lt;/code>&lt;/pre>
&lt;p>Then we use &lt;code>ProfileAnalysis.determine_mask_indices()&lt;/code> to figure out which profiles in a Profile object lie within each regional mask:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">analysis&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">coast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ProfileAnalysis&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000">mask_indices&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">analysis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">determine_mask_indices&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">profile&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mask_xr&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This returns an object called &lt;code>mask_indices&lt;/code>, which is required to pass to &lt;code>ProfileAnalysis.mask_means()&lt;/code>. This routine will return a new xarray dataset containing averaged data for each region:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">profile_mask_means&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">analysis&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">mask_means&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">profile&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">mask_indices&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>This routine operates over all variables in the &lt;code>profile&lt;/code> object. It calculates means by region preserving depth information (&lt;code>profile_mean_*&lt;/code>) and also averaging over depth information (&lt;code>all_mean_*&lt;/code>). The variables are returned with these prefixes accordingly.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">profile_mask_means&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div>&lt;svg style="position: absolute; width: 0; height: 0; overflow: hidden">
&lt;defs>
&lt;symbol id="icon-database" viewBox="0 0 32 32">
&lt;path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z">&lt;/path>
&lt;path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z">&lt;/path>
&lt;path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z">&lt;/path>
&lt;/symbol>
&lt;symbol id="icon-file-text2" viewBox="0 0 32 32">
&lt;path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z">&lt;/path>
&lt;path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z">&lt;/path>
&lt;path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z">&lt;/path>
&lt;path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z">&lt;/path>
&lt;/symbol>
&lt;/defs>
&lt;/svg>
&lt;style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
*
*/
&lt;p>:root {
&amp;ndash;xr-font-color0: var(&amp;ndash;jp-content-font-color0, rgba(0, 0, 0, 1));
&amp;ndash;xr-font-color2: var(&amp;ndash;jp-content-font-color2, rgba(0, 0, 0, 0.54));
&amp;ndash;xr-font-color3: var(&amp;ndash;jp-content-font-color3, rgba(0, 0, 0, 0.38));
&amp;ndash;xr-border-color: var(&amp;ndash;jp-border-color2, #e0e0e0);
&amp;ndash;xr-disabled-color: var(&amp;ndash;jp-layout-color3, #bdbdbd);
&amp;ndash;xr-background-color: var(&amp;ndash;jp-layout-color0, white);
&amp;ndash;xr-background-color-row-even: var(&amp;ndash;jp-layout-color1, white);
&amp;ndash;xr-background-color-row-odd: var(&amp;ndash;jp-layout-color2, #eeeeee);
}&lt;/p>
&lt;p>html[theme=dark],
body[data-theme=dark],
body.vscode-dark {
&amp;ndash;xr-font-color0: rgba(255, 255, 255, 1);
&amp;ndash;xr-font-color2: rgba(255, 255, 255, 0.54);
&amp;ndash;xr-font-color3: rgba(255, 255, 255, 0.38);
&amp;ndash;xr-border-color: #1F1F1F;
&amp;ndash;xr-disabled-color: #515151;
&amp;ndash;xr-background-color: #111111;
&amp;ndash;xr-background-color-row-even: #111111;
&amp;ndash;xr-background-color-row-odd: #313131;
}&lt;/p>
&lt;p>.xr-wrap {
display: block !important;
min-width: 300px;
max-width: 700px;
}&lt;/p>
&lt;p>.xr-text-repr-fallback {
/* fallback to plain text repr when CSS is not injected (untrusted notebook) */
display: none;
}&lt;/p>
&lt;p>.xr-header {
padding-top: 6px;
padding-bottom: 6px;
margin-bottom: 4px;
border-bottom: solid 1px var(&amp;ndash;xr-border-color);
}&lt;/p>
&lt;p>.xr-header &amp;gt; div,
.xr-header &amp;gt; ul {
display: inline;
margin-top: 0;
margin-bottom: 0;
}&lt;/p>
&lt;p>.xr-obj-type,
.xr-array-name {
margin-left: 2px;
margin-right: 10px;
}&lt;/p>
&lt;p>.xr-obj-type {
color: var(&amp;ndash;xr-font-color2);
}&lt;/p>
&lt;p>.xr-sections {
padding-left: 0 !important;
display: grid;
grid-template-columns: 150px auto auto 1fr 20px 20px;
}&lt;/p>
&lt;p>.xr-section-item {
display: contents;
}&lt;/p>
&lt;p>.xr-section-item input {
display: none;
}&lt;/p>
&lt;p>.xr-section-item input + label {
color: var(&amp;ndash;xr-disabled-color);
}&lt;/p>
&lt;p>.xr-section-item input:enabled + label {
cursor: pointer;
color: var(&amp;ndash;xr-font-color2);
}&lt;/p>
&lt;p>.xr-section-item input:enabled + label:hover {
color: var(&amp;ndash;xr-font-color0);
}&lt;/p>
&lt;p>.xr-section-summary {
grid-column: 1;
color: var(&amp;ndash;xr-font-color2);
font-weight: 500;
}&lt;/p>
&lt;p>.xr-section-summary &amp;gt; span {
display: inline-block;
padding-left: 0.5em;
}&lt;/p>
&lt;p>.xr-section-summary-in:disabled + label {
color: var(&amp;ndash;xr-font-color2);
}&lt;/p>
&lt;p>.xr-section-summary-in + label:before {
display: inline-block;
content: &amp;lsquo;â–º&amp;rsquo;;
font-size: 11px;
width: 15px;
text-align: center;
}&lt;/p>
&lt;p>.xr-section-summary-in:disabled + label:before {
color: var(&amp;ndash;xr-disabled-color);
}&lt;/p>
&lt;p>.xr-section-summary-in:checked + label:before {
content: &amp;lsquo;â–¼&amp;rsquo;;
}&lt;/p>
&lt;p>.xr-section-summary-in:checked + label &amp;gt; span {
display: none;
}&lt;/p>
&lt;p>.xr-section-summary,
.xr-section-inline-details {
padding-top: 4px;
padding-bottom: 4px;
}&lt;/p>
&lt;p>.xr-section-inline-details {
grid-column: 2 / -1;
}&lt;/p>
&lt;p>.xr-section-details {
display: none;
grid-column: 1 / -1;
margin-bottom: 5px;
}&lt;/p>
&lt;p>.xr-section-summary-in:checked ~ .xr-section-details {
display: contents;
}&lt;/p>
&lt;p>.xr-array-wrap {
grid-column: 1 / -1;
display: grid;
grid-template-columns: 20px auto;
}&lt;/p>
&lt;p>.xr-array-wrap &amp;gt; label {
grid-column: 1;
vertical-align: top;
}&lt;/p>
&lt;p>.xr-preview {
color: var(&amp;ndash;xr-font-color3);
}&lt;/p>
&lt;p>.xr-array-preview,
.xr-array-data {
padding: 0 5px !important;
grid-column: 2;
}&lt;/p>
&lt;p>.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
display: none;
}&lt;/p>
&lt;p>.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
display: inline-block;
}&lt;/p>
&lt;p>.xr-dim-list {
display: inline-block !important;
list-style: none;
padding: 0 !important;
margin: 0;
}&lt;/p>
&lt;p>.xr-dim-list li {
display: inline-block;
padding: 0;
margin: 0;
}&lt;/p>
&lt;p>.xr-dim-list:before {
content: &amp;lsquo;(';
}&lt;/p>
&lt;p>.xr-dim-list:after {
content: &amp;lsquo;)';
}&lt;/p>
&lt;p>.xr-dim-list li:not(:last-child):after {
content: &amp;lsquo;,';
padding-right: 5px;
}&lt;/p>
&lt;p>.xr-has-index {
font-weight: bold;
}&lt;/p>
&lt;p>.xr-var-list,
.xr-var-item {
display: contents;
}&lt;/p>
&lt;p>.xr-var-item &amp;gt; div,
.xr-var-item label,
.xr-var-item &amp;gt; .xr-var-name span {
background-color: var(&amp;ndash;xr-background-color-row-even);
margin-bottom: 0;
}&lt;/p>
&lt;p>.xr-var-item &amp;gt; .xr-var-name:hover span {
padding-right: 5px;
}&lt;/p>
&lt;p>.xr-var-list &amp;gt; li:nth-child(odd) &amp;gt; div,
.xr-var-list &amp;gt; li:nth-child(odd) &amp;gt; label,
.xr-var-list &amp;gt; li:nth-child(odd) &amp;gt; .xr-var-name span {
background-color: var(&amp;ndash;xr-background-color-row-odd);
}&lt;/p>
&lt;p>.xr-var-name {
grid-column: 1;
}&lt;/p>
&lt;p>.xr-var-dims {
grid-column: 2;
}&lt;/p>
&lt;p>.xr-var-dtype {
grid-column: 3;
text-align: right;
color: var(&amp;ndash;xr-font-color2);
}&lt;/p>
&lt;p>.xr-var-preview {
grid-column: 4;
}&lt;/p>
&lt;p>.xr-index-preview {
grid-column: 2 / 5;
color: var(&amp;ndash;xr-font-color2);
}&lt;/p>
&lt;p>.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
white-space: nowrap;
overflow: hidden;
text-overflow: ellipsis;
padding-right: 10px;
}&lt;/p>
&lt;p>.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
overflow: visible;
width: auto;
z-index: 1;
}&lt;/p>
&lt;p>.xr-var-attrs,
.xr-var-data,
.xr-index-data {
display: none;
background-color: var(&amp;ndash;xr-background-color) !important;
padding-bottom: 5px !important;
}&lt;/p>
&lt;p>.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data,
.xr-index-data-in:checked ~ .xr-index-data {
display: block;
}&lt;/p>
&lt;p>.xr-var-data &amp;gt; table {
float: right;
}&lt;/p>
&lt;p>.xr-var-name span,
.xr-var-data,
.xr-index-name div,
.xr-index-data,
.xr-attrs {
padding-left: 25px !important;
}&lt;/p>
&lt;p>.xr-attrs,
.xr-var-attrs,
.xr-var-data,
.xr-index-data {
grid-column: 1 / -1;
}&lt;/p>
&lt;p>dl.xr-attrs {
padding: 0;
margin: 0;
display: grid;
grid-template-columns: 125px auto;
}&lt;/p>
&lt;p>.xr-attrs dt,
.xr-attrs dd {
padding: 0;
margin: 0;
float: left;
padding-right: 10px;
width: auto;
}&lt;/p>
&lt;p>.xr-attrs dt {
font-weight: normal;
grid-column: 1;
}&lt;/p>
&lt;p>.xr-attrs dt:hover span {
display: inline-block;
background: var(&amp;ndash;xr-background-color);
padding-right: 10px;
}&lt;/p>
&lt;p>.xr-attrs dd {
grid-column: 2;
white-space: pre-wrap;
word-break: break-all;
}&lt;/p>
&lt;p>.xr-icon-database,
.xr-icon-file-text2,
.xr-no-icon {
display: inline-block;
vertical-align: middle;
width: 1em;
height: 1.5em !important;
stroke-width: 0;
stroke: currentColor;
fill: currentColor;
}
&lt;/style>&lt;pre class='xr-text-repr-fallback'>&amp;lt;xarray.Dataset&amp;gt;
Dimensions: (dim_mask: 8, z_dim: 400)
Coordinates:
region_names (dim_mask) &amp;lt;U18 'whole domain' &amp;hellip; 'k&amp;hellip;
Dimensions without coordinates: dim_mask, z_dim
Data variables:
profile_mean_depth (dim_mask, z_dim) float32 3.802 &amp;hellip; nan
profile_mean_potential_temperature (dim_mask, z_dim) float32 4.629 &amp;hellip; nan
profile_mean_temperature (dim_mask, z_dim) float32 4.629 &amp;hellip; nan
profile_mean_practical_salinity (dim_mask, z_dim) float32 29.08 &amp;hellip; nan
profile_mean_qc_flags_profiles (dim_mask) float64 4.422e+05 &amp;hellip; 1.93&amp;hellip;
profile_mean_qc_flags_levels (dim_mask, z_dim) float64 1.693e+07 &amp;hellip;.
all_mean_depth (dim_mask) float32 219.3 48.17 &amp;hellip; 86.48
all_mean_potential_temperature (dim_mask) float32 7.458 6.68 &amp;hellip; 7.266
all_mean_temperature (dim_mask) float32 7.48 6.685 &amp;hellip; 7.275
all_mean_practical_salinity (dim_mask) float32 34.57 34.86 &amp;hellip; 33.76
all_mean_qc_flags_profiles (dim_mask) float64 4.422e+05 &amp;hellip; 1.93&amp;hellip;
all_mean_qc_flags_levels (dim_mask) float64 3.272e+07 &amp;hellip; 3.68&amp;hellip;&lt;/pre>&lt;div class='xr-wrap' style='display:none'>&lt;div class='xr-header'>&lt;div class='xr-obj-type'>xarray.Dataset&lt;/div>&lt;/div>&lt;ul class='xr-sections'>&lt;li class='xr-section-item'>&lt;input id='section-96523dba-9ddb-4289-aa55-4ddc8c6dde82' class='xr-section-summary-in' type='checkbox' disabled >&lt;label for='section-96523dba-9ddb-4289-aa55-4ddc8c6dde82' class='xr-section-summary' title='Expand/collapse section'>Dimensions:&lt;/label>&lt;div class='xr-section-inline-details'>&lt;ul class='xr-dim-list'>&lt;li>&lt;span>dim_mask&lt;/span>: 8&lt;/li>&lt;li>&lt;span>z_dim&lt;/span>: 400&lt;/li>&lt;/ul>&lt;/div>&lt;div class='xr-section-details'>&lt;/div>&lt;/li>&lt;li class='xr-section-item'>&lt;input id='section-143ff0a8-2a86-4c69-bb18-984a7872ad28' class='xr-section-summary-in' type='checkbox' checked>&lt;label for='section-143ff0a8-2a86-4c69-bb18-984a7872ad28' class='xr-section-summary' >Coordinates: &lt;span>(1)&lt;/span>&lt;/label>&lt;div class='xr-section-inline-details'>&lt;/div>&lt;div class='xr-section-details'>&lt;ul class='xr-var-list'>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>region_names&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(dim_mask)&lt;/div>&lt;div class='xr-var-dtype'>&amp;lt;U18&lt;/div>&lt;div class='xr-var-preview xr-preview'>'whole domain' &amp;hellip; 'kattegat'&lt;/div>&lt;input id='attrs-9db0db25-56df-407b-aaf1-b9078190c7b9' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-9db0db25-56df-407b-aaf1-b9078190c7b9' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-e57a9e2c-f307-4cbe-82a0-914c2a471c20' class='xr-var-data-in' type='checkbox'>&lt;label for='data-e57a9e2c-f307-4cbe-82a0-914c2a471c20' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array(['whole domain', 'northern north sea', 'southern north sea',
'outer shelf', 'norwegian trench', 'english_channel', 'off shelf',
'kattegat'], dtype='&amp;lt;U18')&lt;/pre>&lt;/div>&lt;/li>&lt;/ul>&lt;/div>&lt;/li>&lt;li class='xr-section-item'>&lt;input id='section-d922b407-924b-4966-9d6d-41421d7cc52d' class='xr-section-summary-in' type='checkbox' checked>&lt;label for='section-d922b407-924b-4966-9d6d-41421d7cc52d' class='xr-section-summary' >Data variables: &lt;span>(12)&lt;/span>&lt;/label>&lt;div class='xr-section-inline-details'>&lt;/div>&lt;div class='xr-section-details'>&lt;ul class='xr-var-list'>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>profile_mean_depth&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(dim_mask, z_dim)&lt;/div>&lt;div class='xr-var-dtype'>float32&lt;/div>&lt;div class='xr-var-preview xr-preview'>3.802 12.43 12.75 &amp;hellip; nan nan nan&lt;/div>&lt;input id='attrs-5fe26a9c-0d3c-4d28-bd6e-2478c76b0f0e' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-5fe26a9c-0d3c-4d28-bd6e-2478c76b0f0e' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-33f42a1e-2bf7-4959-8b99-3458c6110191' class='xr-var-data-in' type='checkbox'>&lt;label for='data-33f42a1e-2bf7-4959-8b99-3458c6110191' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([[3.8015647e+00, 1.2431897e+01, 1.2752748e+01, &amp;hellip;, 6.8166663e+02,
4.4625000e+02, 4.8479999e+02],
[5.3978572e+00, 2.4058212e+01, 1.9938543e+01, &amp;hellip;, nan,
nan, nan],
[4.4636950e+00, 1.6393627e+01, 1.4392214e+01, &amp;hellip;, nan,
nan, nan],
&amp;hellip;,
[1.2563381e+00, 3.3999999e+00, 6.0253515e+00, &amp;hellip;, nan,
nan, nan],
[1.0883763e+01, 1.9575655e+01, 3.1419313e+01, &amp;hellip;, 1.1761000e+03,
nan, nan],
[1.1508474e+00, 5.1322031e+00, 8.6844826e+00, &amp;hellip;, nan,
nan, nan]], dtype=float32)&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>profile_mean_potential_temperature&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(dim_mask, z_dim)&lt;/div>&lt;div class='xr-var-dtype'>float32&lt;/div>&lt;div class='xr-var-preview xr-preview'>4.629 4.718 4.732 &amp;hellip; nan nan nan&lt;/div>&lt;input id='attrs-2e1d34eb-47d4-4d57-8d5b-aa494090836a' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-2e1d34eb-47d4-4d57-8d5b-aa494090836a' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-df0b31d6-cc53-41b2-88a8-da1171ef09ca' class='xr-var-data-in' type='checkbox'>&lt;label for='data-df0b31d6-cc53-41b2-88a8-da1171ef09ca' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([[ 4.629049 , 4.7177176 , 4.7318735 , &amp;hellip;, 4.4791145 ,
7.0863085 , 7.4710603 ],
[ 5.4062243 , 5.538929 , 5.3454785 , &amp;hellip;, nan,
nan, nan],
[ 4.690185 , 4.7648296 , 4.290611 , &amp;hellip;, nan,
nan, nan],
&amp;hellip;,
[ 7.777337 , 7.743324 , 7.730106 , &amp;hellip;, nan,
nan, nan],
[10.741058 , 10.7420845 , 10.740048 , &amp;hellip;, -0.8672274 ,
nan, nan],
[ 0.6519121 , 0.89932823, 1.4384961 , &amp;hellip;, nan,
nan, nan]], dtype=float32)&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>profile_mean_temperature&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(dim_mask, z_dim)&lt;/div>&lt;div class='xr-var-dtype'>float32&lt;/div>&lt;div class='xr-var-preview xr-preview'>4.629 4.719 4.733 &amp;hellip; nan nan nan&lt;/div>&lt;input id='attrs-1b278805-5945-46ff-b0b9-4b88bcfee2eb' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-1b278805-5945-46ff-b0b9-4b88bcfee2eb' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-1b5c84f2-4bdf-4db4-8e27-e96fa7fced6a' class='xr-var-data-in' type='checkbox'>&lt;label for='data-1b5c84f2-4bdf-4db4-8e27-e96fa7fced6a' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([[ 4.629366 , 4.7186904 , 4.7328353 , &amp;hellip;, 4.523333 ,
7.13 , 7.52 ],
[ 5.4066286 , 5.540855 , 5.3469286 , &amp;hellip;, nan,
nan, nan],
[ 4.69051 , 4.76605 , 4.291559 , &amp;hellip;, nan,
nan, nan],
&amp;hellip;,
[ 7.777464 , 7.7436633 , 7.7307053 , &amp;hellip;, nan,
nan, nan],
[10.742379 , 10.744476 , 10.743904 , &amp;hellip;, -0.82 ,
nan, nan],
[ 0.6519491 , 0.89944816, 1.4387244 , &amp;hellip;, nan,
nan, nan]], dtype=float32)&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>profile_mean_practical_salinity&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(dim_mask, z_dim)&lt;/div>&lt;div class='xr-var-dtype'>float32&lt;/div>&lt;div class='xr-var-preview xr-preview'>29.08 29.49 30.4 &amp;hellip; nan nan nan&lt;/div>&lt;input id='attrs-58db60e9-c9cb-474e-b882-5c78ff7b9d0c' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-58db60e9-c9cb-474e-b882-5c78ff7b9d0c' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-3f744c4b-c29d-4f26-ae56-f1f59178fab7' class='xr-var-data-in' type='checkbox'>&lt;label for='data-3f744c4b-c29d-4f26-ae56-f1f59178fab7' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([[29.07752 , 29.488913, 30.403212, &amp;hellip;, 35.102665, 35.194 ,
35.191 ],
[34.215603, 34.549515, 34.572178, &amp;hellip;, nan, nan,
nan],
[34.39857 , 34.319733, 34.34744 , &amp;hellip;, nan, nan,
nan],
&amp;hellip;,
[34.69485 , 34.745506, 34.778313, &amp;hellip;, nan, nan,
nan],
[35.41276 , 35.531857, 35.523746, &amp;hellip;, 34.912 , nan,
nan],
[22.681366, 23.651918, 24.719212, &amp;hellip;, nan, nan,
nan]], dtype=float32)&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>profile_mean_qc_flags_profiles&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(dim_mask)&lt;/div>&lt;div class='xr-var-dtype'>float64&lt;/div>&lt;div class='xr-var-preview xr-preview'>4.422e+05 1.501e+04 &amp;hellip; 1.93e+06&lt;/div>&lt;input id='attrs-8b4a9183-af86-48ae-901f-30288093de5b' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-8b4a9183-af86-48ae-901f-30288093de5b' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-4753433b-df7d-4874-aa1f-1ee99bd78601' class='xr-var-data-in' type='checkbox'>&lt;label for='data-4753433b-df7d-4874-aa1f-1ee99bd78601' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([ 442235.24343675, 15008.98928571, 80146.01273885,
376662.06666667, 938649.58108108, 236414.92957746,
351245.56410256, 1930156.61016949])&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>profile_mean_qc_flags_levels&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(dim_mask, z_dim)&lt;/div>&lt;div class='xr-var-dtype'>float64&lt;/div>&lt;div class='xr-var-preview xr-preview'>1.693e+07 1.56e+07 &amp;hellip; 3.356e+07&lt;/div>&lt;input id='attrs-e1273005-fda7-4184-99e9-8e8804649d78' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-e1273005-fda7-4184-99e9-8e8804649d78' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-04e0a7be-d1c8-4122-93c4-1560fdfe5e1b' class='xr-var-data-in' type='checkbox'>&lt;label for='data-04e0a7be-d1c8-4122-93c4-1560fdfe5e1b' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([[1.69308660e+07, 1.55996508e+07, 1.91944702e+07, &amp;hellip;,
3.35092258e+07, 3.35359264e+07, 3.35359264e+07],
[2.41202110e+06, 1.67795573e+06, 1.43838659e+07, &amp;hellip;,
3.35626270e+07, 3.35626270e+07, 3.35626270e+07],
[7.82982090e+06, 9.03196737e+06, 2.22584483e+07, &amp;hellip;,
3.35626270e+07, 3.35626270e+07, 3.35626270e+07],
&amp;hellip;,
[1.43590767e+07, 1.24096114e+07, 1.32338878e+07, &amp;hellip;,
3.35626270e+07, 3.35626270e+07, 3.35626270e+07],
[2.49180806e+06, 2.49194591e+06, 1.91836366e+06, &amp;hellip;,
3.32757669e+07, 3.35626270e+07, 3.35626270e+07],
[1.07067776e+08, 1.03513576e+08, 9.04351003e+07, &amp;hellip;,
3.35626270e+07, 3.35626270e+07, 3.35626270e+07]])&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>all_mean_depth&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(dim_mask)&lt;/div>&lt;div class='xr-var-dtype'>float32&lt;/div>&lt;div class='xr-var-preview xr-preview'>219.3 48.17 17.66 &amp;hellip; 492.1 86.48&lt;/div>&lt;input id='attrs-00ff913b-1eac-4e47-80f8-52df15dc2be7' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-00ff913b-1eac-4e47-80f8-52df15dc2be7' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-0550bfd1-270d-4137-b968-9a264d8561f7' class='xr-var-data-in' type='checkbox'>&lt;label for='data-0550bfd1-270d-4137-b968-9a264d8561f7' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([219.31877 , 48.17008 , 17.655499, 54.261852, 147.37276 ,
21.17876 , 492.1379 , 86.48219 ], dtype=float32)&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>all_mean_potential_temperature&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(dim_mask)&lt;/div>&lt;div class='xr-var-dtype'>float32&lt;/div>&lt;div class='xr-var-preview xr-preview'>7.458 6.68 5.08 &amp;hellip; 8.609 7.266&lt;/div>&lt;input id='attrs-caa1a5ea-0e21-4789-bab3-2f0876aad072' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-caa1a5ea-0e21-4789-bab3-2f0876aad072' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-6ecb77c5-788c-4101-b8df-b6c8f0313337' class='xr-var-data-in' type='checkbox'>&lt;label for='data-6ecb77c5-788c-4101-b8df-b6c8f0313337' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([ 7.4579477, 6.6803527, 5.0804653, 10.605105 , 7.5581946,
7.9912376, 8.609107 , 7.266073 ], dtype=float32)&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>all_mean_temperature&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(dim_mask)&lt;/div>&lt;div class='xr-var-dtype'>float32&lt;/div>&lt;div class='xr-var-preview xr-preview'>7.48 6.685 5.082 &amp;hellip; 8.658 7.275&lt;/div>&lt;input id='attrs-b16bfaeb-4a4c-4f2e-b13f-f8cc9cb76c6f' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-b16bfaeb-4a4c-4f2e-b13f-f8cc9cb76c6f' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-a5c65f47-101a-43cf-a84b-c8acfa09c65b' class='xr-var-data-in' type='checkbox'>&lt;label for='data-a5c65f47-101a-43cf-a84b-c8acfa09c65b' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([ 7.479547 , 6.684928 , 5.0818586, 10.611826 , 7.572891 ,
7.993422 , 8.657866 , 7.2747602], dtype=float32)&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>all_mean_practical_salinity&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(dim_mask)&lt;/div>&lt;div class='xr-var-dtype'>float32&lt;/div>&lt;div class='xr-var-preview xr-preview'>34.57 34.86 34.49 &amp;hellip; 35.33 33.76&lt;/div>&lt;input id='attrs-04db2226-fc03-4293-a454-7c36d8a363ea' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-04db2226-fc03-4293-a454-7c36d8a363ea' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-3ce143cc-a2b8-4ab4-acfa-d02464defca6' class='xr-var-data-in' type='checkbox'>&lt;label for='data-3ce143cc-a2b8-4ab4-acfa-d02464defca6' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([34.574173, 34.85523 , 34.486984, 35.177284, 34.745213, 34.871284,
35.334602, 33.764072], dtype=float32)&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>all_mean_qc_flags_profiles&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(dim_mask)&lt;/div>&lt;div class='xr-var-dtype'>float64&lt;/div>&lt;div class='xr-var-preview xr-preview'>4.422e+05 1.501e+04 &amp;hellip; 1.93e+06&lt;/div>&lt;input id='attrs-eb2c3f29-1401-4092-8dec-2b902633adda' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-eb2c3f29-1401-4092-8dec-2b902633adda' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-515f5af6-33ab-4080-89c2-1897232cb162' class='xr-var-data-in' type='checkbox'>&lt;label for='data-515f5af6-33ab-4080-89c2-1897232cb162' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([ 442235.24343675, 15008.98928571, 80146.01273885,
376662.06666667, 938649.58108108, 236414.92957746,
351245.56410256, 1930156.61016949])&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>all_mean_qc_flags_levels&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(dim_mask)&lt;/div>&lt;div class='xr-var-dtype'>float64&lt;/div>&lt;div class='xr-var-preview xr-preview'>3.272e+07 3.244e+07 &amp;hellip; 3.683e+07&lt;/div>&lt;input id='attrs-33353915-0b67-44da-a506-d53e28341a0b' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-33353915-0b67-44da-a506-d53e28341a0b' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-66fdf4ba-1ba2-4515-8f9f-8b2dae8bbffc' class='xr-var-data-in' type='checkbox'>&lt;label for='data-66fdf4ba-1ba2-4515-8f9f-8b2dae8bbffc' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([32717180.43962013, 32440148.97097322, 33282693.25738854,
32052298.20066667, 38954525.82148649, 32985344.45144366,
26732339.47348291, 36830323.95974576])&lt;/pre>&lt;/div>&lt;/li>&lt;/ul>&lt;/div>&lt;/li>&lt;li class='xr-section-item'>&lt;input id='section-db2bed82-7aec-45ce-b664-68740165af04' class='xr-section-summary-in' type='checkbox' disabled >&lt;label for='section-db2bed82-7aec-45ce-b664-68740165af04' class='xr-section-summary' title='Expand/collapse section'>Indexes: &lt;span>(0)&lt;/span>&lt;/label>&lt;div class='xr-section-inline-details'>&lt;/div>&lt;div class='xr-section-details'>&lt;ul class='xr-var-list'>&lt;/ul>&lt;/div>&lt;/li>&lt;li class='xr-section-item'>&lt;input id='section-6dbbeccc-b70c-4ae0-a9ce-06047c586c10' class='xr-section-summary-in' type='checkbox' disabled >&lt;label for='section-6dbbeccc-b70c-4ae0-a9ce-06047c586c10' class='xr-section-summary' title='Expand/collapse section'>Attributes: &lt;span>(0)&lt;/span>&lt;/label>&lt;div class='xr-section-inline-details'>&lt;/div>&lt;div class='xr-section-details'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;/li>&lt;/ul>&lt;/div>&lt;/div>&lt;/p>
&lt;p>Notice that the number of mask dimensions is not necessarily preserved between the mask and the mask averaged variables. This happens if, for example, there are no profiles in one of the mask regions&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">check1&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">mask_indices&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dims&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;dim_mask&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#000">profile_mask_means&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dims&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;dim_mask&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">check1&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>False
&lt;/code>&lt;/pre>
&lt;p>The mean profiles can be visualised or further processed (notice the Irish Sea region and FSC are missing because there were no profiles in the example dataset)&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#000">count_region&lt;/span> &lt;span style="color:#204a87;font-weight:bold">in&lt;/span> &lt;span style="color:#204a87">range&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">profile_mask_means&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sizes&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;dim_mask&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">]):&lt;/span>
&lt;span style="color:#000">plt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">plot&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">profile_mask_means&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">profile_mean_temperature&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">isel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dim_mask&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">count_region&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span>
&lt;span style="color:#000">profile_mask_means&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">profile_mean_depth&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">isel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dim_mask&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">count_region&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span>
&lt;span style="color:#000">label&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">profile_mask_means&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">region_names&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">count_region&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">values&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">marker&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">linestyle&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;none&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">plt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ylim&lt;/span>&lt;span style="color:#000;font-weight:bold">([&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1000&lt;/span>&lt;span style="color:#000;font-weight:bold">])&lt;/span>
&lt;span style="color:#000">plt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">yscale&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;log&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">plt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">gca&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">invert_yaxis&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000">plt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">xlabel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;temperature&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span> &lt;span style="color:#000">plt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ylabel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;depth&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">plt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">legend&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>&amp;lt;matplotlib.legend.Legend at 0x7fc5b627ceb0&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://british-oceanographic-data-centre.github.io/COAsT/COAsT/mask_maker_tutorial_files/mask_maker_tutorial_33_1.png" alt="png">&lt;/p>
&lt;h1 id="regional-analysis-with-gridded-data">Regional analysis with Gridded data&lt;/h1>
&lt;p>Apply the regional masks to average SST. This is done manually as there are not yet COAsT methods to broadcast the operations across all variables.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># Syntax: xr.where(if &amp;lt;first&amp;gt;, then &amp;lt;2nd&amp;gt;, else &amp;lt;3rd&amp;gt;) &lt;/span>
&lt;span style="color:#000">mask_SST&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">xr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">where&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span> &lt;span style="color:#000">mask_xr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">mask&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">nemo&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">temperature&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">isel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">z_dim&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span> &lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">NaN&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Take the mean over space for each region&lt;/span>
&lt;span style="color:#000">mask_mean_SST&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">mask_SST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">mean&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dim&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;x_dim&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">mean&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dim&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;y_dim&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># Inspect the processed data&lt;/span>
&lt;span style="color:#000">mask_mean_SST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">plot&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>&amp;lt;matplotlib.collections.QuadMesh at 0x7fc5b6117130&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://british-oceanographic-data-centre.github.io/COAsT/COAsT/mask_maker_tutorial_files/mask_maker_tutorial_36_1.png" alt="png">&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># Plot timeseries per region&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#000">count_region&lt;/span> &lt;span style="color:#204a87;font-weight:bold">in&lt;/span> &lt;span style="color:#204a87">range&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">mask_mean_SST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sizes&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;dim_mask&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">]):&lt;/span>
&lt;span style="color:#000">plt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">plot&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">mask_mean_SST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">isel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">dim_mask&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">count_region&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span>
&lt;span style="color:#000">label&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">mask_mean_SST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">region_names&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">count_region&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">values&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">marker&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;.&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">linestyle&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;none&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">plt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">xlabel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;time&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span> &lt;span style="color:#000">plt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ylabel&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;SST&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">plt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">legend&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>&amp;lt;matplotlib.legend.Legend at 0x7fc5b618b3a0&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://british-oceanographic-data-centre.github.io/COAsT/COAsT/mask_maker_tutorial_files/mask_maker_tutorial_37_1.png" alt="png">&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">
&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Docs: Seasonal decomp example</title><link>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/general/seasonal_decomp_example/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://british-oceanographic-data-centre.github.io/COAsT/docs/examples/notebooks/general/seasonal_decomp_example/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>A function within the Process_data class that will decompose time series into trend, seasonal and residual components. The function is a wrapper that adds functionality to the &lt;code>seasonal_decompose&lt;/code> function contained in the &lt;a href="https://www.statsmodels.org/stable/generated/statsmodels.tsa.seasonal.seasonal_decompose.html#statsmodels.tsa.seasonal.seasonal_decompose">statsmodels&lt;/a> package to make it more convenient for large geospatial datasets.&lt;/p>
&lt;p>Specifically:&lt;/p>
&lt;ol>
&lt;li>Multiple time series spread across multiple dimensions, e.g. a gridded dataset, can be processed. The user simply passes in an xarray DataArray that has a &amp;ldquo;t_dim&amp;rdquo; dimension and 1 or more additional dimensions, for example gridded spatial dimensions&lt;/li>
&lt;li>Masked locations, such as land points, are handled&lt;/li>
&lt;li>A &lt;a href="https://www.dask.org/">dask&lt;/a> wrapper is applied to the function that
a) supports lazy evaluation
b) allows the dataset to be easily seperated into chunks so that processing can be carried out in parallel (rather than processing every time series sequentially)&lt;/li>
&lt;li>The decomposed time series are returned as xarray DataArrays within a single coast.Gridded object&lt;/li>
&lt;/ol>
&lt;h2 id="an-example">An example&lt;/h2>
&lt;p>Below is an example using the &lt;code>coast.Process_data.seasonal_decomposition&lt;/code> function with the example data. Note that we will artifically extend the length of the example data time series for demonstrative purposes.&lt;/p>
&lt;p>Begin by importing coast, defining paths to the data, and loading the example data into a gridded object:&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">coast&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">numpy&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">np&lt;/span>
&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">xarray&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">xr&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Path to a data file&lt;/span>
&lt;span style="color:#000">root&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./&amp;#34;&lt;/span>
&lt;span style="color:#000">dn_files&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">root&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./example_files/&amp;#34;&lt;/span>
&lt;span style="color:#000">fn_nemo_dat&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">dn_files&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;coast_example_nemo_data.nc&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Set path for domain file if required.&lt;/span>
&lt;span style="color:#000">fn_nemo_dom&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">dn_files&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;coast_example_nemo_domain.nc&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Set path for model configuration file&lt;/span>
&lt;span style="color:#000">config&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">root&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;./config/example_nemo_grid_t.json&amp;#34;&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># Read in data (This example uses NEMO data.)&lt;/span>
&lt;span style="color:#000">grd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">coast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Gridded&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">fn_nemo_dat&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">fn_nemo_dom&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">config&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">config&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The loaded example data only has 7 time stamps, the code below creates a new (fake) extended temperature variable with 48 monthly records. This code is not required to use the function, it is only included here to make a set of time series that are long enough to be interesting.&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic"># create a 4 yr monthly time coordinate array&lt;/span>
&lt;span style="color:#000">time_array&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">arange&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime64&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2010-01-01&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span> &lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime64&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2014-01-01&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span> &lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">timedelta64&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;M&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span> &lt;span style="color:#000">dtype&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;datetime64[M]&amp;#34;&lt;/span>
&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">astype&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;datetime64[s]&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># create 4 years of monthly temperature data based on the loaded data&lt;/span>
&lt;span style="color:#000">temperature_array&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">arange&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">48&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0.05&lt;/span>&lt;span style="color:#000;font-weight:bold">)[:,&lt;/span> &lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">newaxis&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">newaxis&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">newaxis&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">random&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">normal&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0.1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">48&lt;/span>&lt;span style="color:#000;font-weight:bold">)[:,&lt;/span> &lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">newaxis&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">newaxis&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">newaxis&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">np&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">tile&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">grd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">temperature&lt;/span>&lt;span style="color:#000;font-weight:bold">[:&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">-&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000;font-weight:bold">:,&lt;/span> &lt;span style="color:#000;font-weight:bold">:],&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">8&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#8f5902;font-style:italic"># create a new temperature DataArray&lt;/span>
&lt;span style="color:#000">temperature&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">xr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">DataArray&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;span style="color:#000">temperature_array&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000">coords&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;t_dim&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">time_array&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;depth_0&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">grd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">depth_0&lt;/span>&lt;span style="color:#000;font-weight:bold">[:&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000;font-weight:bold">:,&lt;/span> &lt;span style="color:#000;font-weight:bold">:],&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;longitude&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">grd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">longitude&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#4e9a06">&amp;#34;latitude&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">grd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">latitude&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;span style="color:#000">dims&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;t_dim&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;z_dim&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;y_dim&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;x_dim&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Check out the new data&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic">#temperature # uncomment to print data object summary&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">temperature&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,:,:]&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">plot&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>&amp;lt;matplotlib.collections.QuadMesh at 0x7f567dfa8040&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://british-oceanographic-data-centre.github.io/COAsT/COAsT/seasonal_decomp_example_files/seasonal_decomp_example_7_1.png" alt="png">&lt;/p>
&lt;p>Check out time series at 2 different grid points&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">temperature&lt;/span>&lt;span style="color:#000;font-weight:bold">[:,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">50&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">50&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">plot&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000">temperature&lt;/span>&lt;span style="color:#000;font-weight:bold">[:,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">plot&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>[&amp;lt;matplotlib.lines.Line2D at 0x7f567cbdb7c0&amp;gt;]
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://british-oceanographic-data-centre.github.io/COAsT/COAsT/seasonal_decomp_example_files/seasonal_decomp_example_9_1.png" alt="png">&lt;/p>
&lt;p>Create a &lt;code>coast.Process_data&lt;/code> object, and call the &lt;code>seasonal_decomposition&lt;/code> function, passing in the required arguments. The first two arguments are:&lt;/p>
&lt;ol>
&lt;li>The input data, here the temperature data as an xarray DataArray&lt;/li>
&lt;li>The number of chuncks to split the data into. Here we split the data into 2 chunks so that the dask scheduler will try to run 4 processes in parallel&lt;/li>
&lt;/ol>
&lt;p>The remaining arguments are keyword arguments for the underlying &lt;code>statsmodels.tsa.seasonal.seasonal_decompose&lt;/code> function, which are documented on the &lt;a href="https://www.statsmodels.org/stable/generated/statsmodels.tsa.seasonal.seasonal_decompose.html#statsmodels.tsa.seasonal.seasonal_decompose">statsmodels documentation pages&lt;/a>. Here we specify:&lt;/p>
&lt;ol start="3">
&lt;li>three The type of model, i.e. an additive model&lt;/li>
&lt;li>The period of the seasonal cycle, here it is 6 months&lt;/li>
&lt;li>Extrapolate the trend component to cover the entire range of the time series (this is required because the trend is calculated using a convolution filter)&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">proc_data&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">coast&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Process_data&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;span style="color:#000">grd&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">proc_data&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">seasonal_decomposition&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">temperature&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">model&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;additive&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">period&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">6&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">extrapolate_trend&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;freq&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>The returned xarray Dataset contains the decomposed time series (trend, seasonal, residual) as dask arrays&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#8f5902;font-style:italic">#grd.dataset # uncomment to print data object summary&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;p>Execute the computation&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">grd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">compute&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;div>&lt;svg style="position: absolute; width: 0; height: 0; overflow: hidden">
&lt;defs>
&lt;symbol id="icon-database" viewBox="0 0 32 32">
&lt;path d="M16 0c-8.837 0-16 2.239-16 5v4c0 2.761 7.163 5 16 5s16-2.239 16-5v-4c0-2.761-7.163-5-16-5z">&lt;/path>
&lt;path d="M16 17c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z">&lt;/path>
&lt;path d="M16 26c-8.837 0-16-2.239-16-5v6c0 2.761 7.163 5 16 5s16-2.239 16-5v-6c0 2.761-7.163 5-16 5z">&lt;/path>
&lt;/symbol>
&lt;symbol id="icon-file-text2" viewBox="0 0 32 32">
&lt;path d="M28.681 7.159c-0.694-0.947-1.662-2.053-2.724-3.116s-2.169-2.030-3.116-2.724c-1.612-1.182-2.393-1.319-2.841-1.319h-15.5c-1.378 0-2.5 1.121-2.5 2.5v27c0 1.378 1.122 2.5 2.5 2.5h23c1.378 0 2.5-1.122 2.5-2.5v-19.5c0-0.448-0.137-1.23-1.319-2.841zM24.543 5.457c0.959 0.959 1.712 1.825 2.268 2.543h-4.811v-4.811c0.718 0.556 1.584 1.309 2.543 2.268zM28 29.5c0 0.271-0.229 0.5-0.5 0.5h-23c-0.271 0-0.5-0.229-0.5-0.5v-27c0-0.271 0.229-0.5 0.5-0.5 0 0 15.499-0 15.5 0v7c0 0.552 0.448 1 1 1h7v19.5z">&lt;/path>
&lt;path d="M23 26h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z">&lt;/path>
&lt;path d="M23 22h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z">&lt;/path>
&lt;path d="M23 18h-14c-0.552 0-1-0.448-1-1s0.448-1 1-1h14c0.552 0 1 0.448 1 1s-0.448 1-1 1z">&lt;/path>
&lt;/symbol>
&lt;/defs>
&lt;/svg>
&lt;style>/* CSS stylesheet for displaying xarray objects in jupyterlab.
*
*/
&lt;p>:root {
&amp;ndash;xr-font-color0: var(&amp;ndash;jp-content-font-color0, rgba(0, 0, 0, 1));
&amp;ndash;xr-font-color2: var(&amp;ndash;jp-content-font-color2, rgba(0, 0, 0, 0.54));
&amp;ndash;xr-font-color3: var(&amp;ndash;jp-content-font-color3, rgba(0, 0, 0, 0.38));
&amp;ndash;xr-border-color: var(&amp;ndash;jp-border-color2, #e0e0e0);
&amp;ndash;xr-disabled-color: var(&amp;ndash;jp-layout-color3, #bdbdbd);
&amp;ndash;xr-background-color: var(&amp;ndash;jp-layout-color0, white);
&amp;ndash;xr-background-color-row-even: var(&amp;ndash;jp-layout-color1, white);
&amp;ndash;xr-background-color-row-odd: var(&amp;ndash;jp-layout-color2, #eeeeee);
}&lt;/p>
&lt;p>html[theme=dark],
body[data-theme=dark],
body.vscode-dark {
&amp;ndash;xr-font-color0: rgba(255, 255, 255, 1);
&amp;ndash;xr-font-color2: rgba(255, 255, 255, 0.54);
&amp;ndash;xr-font-color3: rgba(255, 255, 255, 0.38);
&amp;ndash;xr-border-color: #1F1F1F;
&amp;ndash;xr-disabled-color: #515151;
&amp;ndash;xr-background-color: #111111;
&amp;ndash;xr-background-color-row-even: #111111;
&amp;ndash;xr-background-color-row-odd: #313131;
}&lt;/p>
&lt;p>.xr-wrap {
display: block !important;
min-width: 300px;
max-width: 700px;
}&lt;/p>
&lt;p>.xr-text-repr-fallback {
/* fallback to plain text repr when CSS is not injected (untrusted notebook) */
display: none;
}&lt;/p>
&lt;p>.xr-header {
padding-top: 6px;
padding-bottom: 6px;
margin-bottom: 4px;
border-bottom: solid 1px var(&amp;ndash;xr-border-color);
}&lt;/p>
&lt;p>.xr-header &amp;gt; div,
.xr-header &amp;gt; ul {
display: inline;
margin-top: 0;
margin-bottom: 0;
}&lt;/p>
&lt;p>.xr-obj-type,
.xr-array-name {
margin-left: 2px;
margin-right: 10px;
}&lt;/p>
&lt;p>.xr-obj-type {
color: var(&amp;ndash;xr-font-color2);
}&lt;/p>
&lt;p>.xr-sections {
padding-left: 0 !important;
display: grid;
grid-template-columns: 150px auto auto 1fr 20px 20px;
}&lt;/p>
&lt;p>.xr-section-item {
display: contents;
}&lt;/p>
&lt;p>.xr-section-item input {
display: none;
}&lt;/p>
&lt;p>.xr-section-item input + label {
color: var(&amp;ndash;xr-disabled-color);
}&lt;/p>
&lt;p>.xr-section-item input:enabled + label {
cursor: pointer;
color: var(&amp;ndash;xr-font-color2);
}&lt;/p>
&lt;p>.xr-section-item input:enabled + label:hover {
color: var(&amp;ndash;xr-font-color0);
}&lt;/p>
&lt;p>.xr-section-summary {
grid-column: 1;
color: var(&amp;ndash;xr-font-color2);
font-weight: 500;
}&lt;/p>
&lt;p>.xr-section-summary &amp;gt; span {
display: inline-block;
padding-left: 0.5em;
}&lt;/p>
&lt;p>.xr-section-summary-in:disabled + label {
color: var(&amp;ndash;xr-font-color2);
}&lt;/p>
&lt;p>.xr-section-summary-in + label:before {
display: inline-block;
content: &amp;lsquo;â–º&amp;rsquo;;
font-size: 11px;
width: 15px;
text-align: center;
}&lt;/p>
&lt;p>.xr-section-summary-in:disabled + label:before {
color: var(&amp;ndash;xr-disabled-color);
}&lt;/p>
&lt;p>.xr-section-summary-in:checked + label:before {
content: &amp;lsquo;â–¼&amp;rsquo;;
}&lt;/p>
&lt;p>.xr-section-summary-in:checked + label &amp;gt; span {
display: none;
}&lt;/p>
&lt;p>.xr-section-summary,
.xr-section-inline-details {
padding-top: 4px;
padding-bottom: 4px;
}&lt;/p>
&lt;p>.xr-section-inline-details {
grid-column: 2 / -1;
}&lt;/p>
&lt;p>.xr-section-details {
display: none;
grid-column: 1 / -1;
margin-bottom: 5px;
}&lt;/p>
&lt;p>.xr-section-summary-in:checked ~ .xr-section-details {
display: contents;
}&lt;/p>
&lt;p>.xr-array-wrap {
grid-column: 1 / -1;
display: grid;
grid-template-columns: 20px auto;
}&lt;/p>
&lt;p>.xr-array-wrap &amp;gt; label {
grid-column: 1;
vertical-align: top;
}&lt;/p>
&lt;p>.xr-preview {
color: var(&amp;ndash;xr-font-color3);
}&lt;/p>
&lt;p>.xr-array-preview,
.xr-array-data {
padding: 0 5px !important;
grid-column: 2;
}&lt;/p>
&lt;p>.xr-array-data,
.xr-array-in:checked ~ .xr-array-preview {
display: none;
}&lt;/p>
&lt;p>.xr-array-in:checked ~ .xr-array-data,
.xr-array-preview {
display: inline-block;
}&lt;/p>
&lt;p>.xr-dim-list {
display: inline-block !important;
list-style: none;
padding: 0 !important;
margin: 0;
}&lt;/p>
&lt;p>.xr-dim-list li {
display: inline-block;
padding: 0;
margin: 0;
}&lt;/p>
&lt;p>.xr-dim-list:before {
content: &amp;lsquo;(';
}&lt;/p>
&lt;p>.xr-dim-list:after {
content: &amp;lsquo;)';
}&lt;/p>
&lt;p>.xr-dim-list li:not(:last-child):after {
content: &amp;lsquo;,';
padding-right: 5px;
}&lt;/p>
&lt;p>.xr-has-index {
font-weight: bold;
}&lt;/p>
&lt;p>.xr-var-list,
.xr-var-item {
display: contents;
}&lt;/p>
&lt;p>.xr-var-item &amp;gt; div,
.xr-var-item label,
.xr-var-item &amp;gt; .xr-var-name span {
background-color: var(&amp;ndash;xr-background-color-row-even);
margin-bottom: 0;
}&lt;/p>
&lt;p>.xr-var-item &amp;gt; .xr-var-name:hover span {
padding-right: 5px;
}&lt;/p>
&lt;p>.xr-var-list &amp;gt; li:nth-child(odd) &amp;gt; div,
.xr-var-list &amp;gt; li:nth-child(odd) &amp;gt; label,
.xr-var-list &amp;gt; li:nth-child(odd) &amp;gt; .xr-var-name span {
background-color: var(&amp;ndash;xr-background-color-row-odd);
}&lt;/p>
&lt;p>.xr-var-name {
grid-column: 1;
}&lt;/p>
&lt;p>.xr-var-dims {
grid-column: 2;
}&lt;/p>
&lt;p>.xr-var-dtype {
grid-column: 3;
text-align: right;
color: var(&amp;ndash;xr-font-color2);
}&lt;/p>
&lt;p>.xr-var-preview {
grid-column: 4;
}&lt;/p>
&lt;p>.xr-index-preview {
grid-column: 2 / 5;
color: var(&amp;ndash;xr-font-color2);
}&lt;/p>
&lt;p>.xr-var-name,
.xr-var-dims,
.xr-var-dtype,
.xr-preview,
.xr-attrs dt {
white-space: nowrap;
overflow: hidden;
text-overflow: ellipsis;
padding-right: 10px;
}&lt;/p>
&lt;p>.xr-var-name:hover,
.xr-var-dims:hover,
.xr-var-dtype:hover,
.xr-attrs dt:hover {
overflow: visible;
width: auto;
z-index: 1;
}&lt;/p>
&lt;p>.xr-var-attrs,
.xr-var-data,
.xr-index-data {
display: none;
background-color: var(&amp;ndash;xr-background-color) !important;
padding-bottom: 5px !important;
}&lt;/p>
&lt;p>.xr-var-attrs-in:checked ~ .xr-var-attrs,
.xr-var-data-in:checked ~ .xr-var-data,
.xr-index-data-in:checked ~ .xr-index-data {
display: block;
}&lt;/p>
&lt;p>.xr-var-data &amp;gt; table {
float: right;
}&lt;/p>
&lt;p>.xr-var-name span,
.xr-var-data,
.xr-index-name div,
.xr-index-data,
.xr-attrs {
padding-left: 25px !important;
}&lt;/p>
&lt;p>.xr-attrs,
.xr-var-attrs,
.xr-var-data,
.xr-index-data {
grid-column: 1 / -1;
}&lt;/p>
&lt;p>dl.xr-attrs {
padding: 0;
margin: 0;
display: grid;
grid-template-columns: 125px auto;
}&lt;/p>
&lt;p>.xr-attrs dt,
.xr-attrs dd {
padding: 0;
margin: 0;
float: left;
padding-right: 10px;
width: auto;
}&lt;/p>
&lt;p>.xr-attrs dt {
font-weight: normal;
grid-column: 1;
}&lt;/p>
&lt;p>.xr-attrs dt:hover span {
display: inline-block;
background: var(&amp;ndash;xr-background-color);
padding-right: 10px;
}&lt;/p>
&lt;p>.xr-attrs dd {
grid-column: 2;
white-space: pre-wrap;
word-break: break-all;
}&lt;/p>
&lt;p>.xr-icon-database,
.xr-icon-file-text2,
.xr-no-icon {
display: inline-block;
vertical-align: middle;
width: 1em;
height: 1.5em !important;
stroke-width: 0;
stroke: currentColor;
fill: currentColor;
}
&lt;/style>&lt;pre class='xr-text-repr-fallback'>&amp;lt;xarray.Dataset&amp;gt;
Dimensions: (t_dim: 48, z_dim: 2, y_dim: 375, x_dim: 297)
Coordinates:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>t_dim (t_dim) datetime64[ns] 2010-01-01 2010-02-01 &amp;hellip; 2013-12-01
depth_0 (z_dim, y_dim, x_dim) float32 0.5 0.5 0.5 0.5 &amp;hellip; 1.5 1.5 1.5 1.5
longitude (y_dim, x_dim) float32 -19.89 -19.78 -19.67 &amp;hellip; 12.78 12.89 13.0
latitude (y_dim, x_dim) float32 40.07 40.07 40.07 40.07 &amp;hellip; 65.0 65.0 65.0
Dimensions without coordinates: z_dim, y_dim, x_dim
Data variables:
trend (t_dim, z_dim, y_dim, x_dim) float64 nan nan nan &amp;hellip; nan nan nan
seasonal (t_dim, z_dim, y_dim, x_dim) float64 nan nan nan &amp;hellip; nan nan nan
residual (t_dim, z_dim, y_dim, x_dim) float64 nan nan nan &amp;hellip; nan nan nan&lt;/pre>&lt;div class='xr-wrap' style='display:none'>&lt;div class='xr-header'>&lt;div class='xr-obj-type'>xarray.Dataset&lt;/div>&lt;/div>&lt;ul class='xr-sections'>&lt;li class='xr-section-item'>&lt;input id='section-17c6cc48-8ed9-4efd-a478-91758d6a4394' class='xr-section-summary-in' type='checkbox' disabled >&lt;label for='section-17c6cc48-8ed9-4efd-a478-91758d6a4394' class='xr-section-summary' title='Expand/collapse section'>Dimensions:&lt;/label>&lt;div class='xr-section-inline-details'>&lt;ul class='xr-dim-list'>&lt;li>&lt;span class='xr-has-index'>t_dim&lt;/span>: 48&lt;/li>&lt;li>&lt;span>z_dim&lt;/span>: 2&lt;/li>&lt;li>&lt;span>y_dim&lt;/span>: 375&lt;/li>&lt;li>&lt;span>x_dim&lt;/span>: 297&lt;/li>&lt;/ul>&lt;/div>&lt;div class='xr-section-details'>&lt;/div>&lt;/li>&lt;li class='xr-section-item'>&lt;input id='section-23d50a8c-65a7-4ed6-a22e-9482b3b3fa40' class='xr-section-summary-in' type='checkbox' checked>&lt;label for='section-23d50a8c-65a7-4ed6-a22e-9482b3b3fa40' class='xr-section-summary' >Coordinates: &lt;span>(4)&lt;/span>&lt;/label>&lt;div class='xr-section-inline-details'>&lt;/div>&lt;div class='xr-section-details'>&lt;ul class='xr-var-list'>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span class='xr-has-index'>t_dim&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(t_dim)&lt;/div>&lt;div class='xr-var-dtype'>datetime64[ns]&lt;/div>&lt;div class='xr-var-preview xr-preview'>2010-01-01 &amp;hellip; 2013-12-01&lt;/div>&lt;input id='attrs-b8b498f6-96e7-4c94-ae9b-43c2b5bca7c8' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-b8b498f6-96e7-4c94-ae9b-43c2b5bca7c8' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-efc5566d-0611-4f6e-8d1c-d77aa3367bbe' class='xr-var-data-in' type='checkbox'>&lt;label for='data-efc5566d-0611-4f6e-8d1c-d77aa3367bbe' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array(['2010-01-01T00:00:00.000000000', '2010-02-01T00:00:00.000000000',
'2010-03-01T00:00:00.000000000', '2010-04-01T00:00:00.000000000',
'2010-05-01T00:00:00.000000000', '2010-06-01T00:00:00.000000000',
'2010-07-01T00:00:00.000000000', '2010-08-01T00:00:00.000000000',
'2010-09-01T00:00:00.000000000', '2010-10-01T00:00:00.000000000',
'2010-11-01T00:00:00.000000000', '2010-12-01T00:00:00.000000000',
'2011-01-01T00:00:00.000000000', '2011-02-01T00:00:00.000000000',
'2011-03-01T00:00:00.000000000', '2011-04-01T00:00:00.000000000',
'2011-05-01T00:00:00.000000000', '2011-06-01T00:00:00.000000000',
'2011-07-01T00:00:00.000000000', '2011-08-01T00:00:00.000000000',
'2011-09-01T00:00:00.000000000', '2011-10-01T00:00:00.000000000',
'2011-11-01T00:00:00.000000000', '2011-12-01T00:00:00.000000000',
'2012-01-01T00:00:00.000000000', '2012-02-01T00:00:00.000000000',
'2012-03-01T00:00:00.000000000', '2012-04-01T00:00:00.000000000',
'2012-05-01T00:00:00.000000000', '2012-06-01T00:00:00.000000000',
'2012-07-01T00:00:00.000000000', '2012-08-01T00:00:00.000000000',
'2012-09-01T00:00:00.000000000', '2012-10-01T00:00:00.000000000',
'2012-11-01T00:00:00.000000000', '2012-12-01T00:00:00.000000000',
'2013-01-01T00:00:00.000000000', '2013-02-01T00:00:00.000000000',
'2013-03-01T00:00:00.000000000', '2013-04-01T00:00:00.000000000',
'2013-05-01T00:00:00.000000000', '2013-06-01T00:00:00.000000000',
'2013-07-01T00:00:00.000000000', '2013-08-01T00:00:00.000000000',
'2013-09-01T00:00:00.000000000', '2013-10-01T00:00:00.000000000',
'2013-11-01T00:00:00.000000000', '2013-12-01T00:00:00.000000000'],
dtype='datetime64[ns]')&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>depth_0&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(z_dim, y_dim, x_dim)&lt;/div>&lt;div class='xr-var-dtype'>float32&lt;/div>&lt;div class='xr-var-preview xr-preview'>0.5 0.5 0.5 0.5 &amp;hellip; 1.5 1.5 1.5 1.5&lt;/div>&lt;input id='attrs-1e8257e9-8cd8-475b-a600-9010c93d9862' class='xr-var-attrs-in' type='checkbox' >&lt;label for='attrs-1e8257e9-8cd8-475b-a600-9010c93d9862' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-c4f6aadc-86f2-4fb3-9927-901e52af632a' class='xr-var-data-in' type='checkbox'>&lt;label for='data-c4f6aadc-86f2-4fb3-9927-901e52af632a' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;dt>&lt;span>units :&lt;/span>&lt;/dt>&lt;dd>m&lt;/dd>&lt;dt>&lt;span>standard_name :&lt;/span>&lt;/dt>&lt;dd>Depth at time zero on the t-grid&lt;/dd>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([[[0.5 , 0.5 , 0.5 , &amp;hellip;, 0.5 ,
0.5 , 0.5 ],
[0.5 , 0.4975586 , 0.4975586 , &amp;hellip;, 0.10009766,
0.10009766, 0.5 ],
[0.5 , 0.4975586 , 0.4975586 , &amp;hellip;, 0.10009766,
0.10009766, 0.5 ],
&amp;hellip;,
[0.5 , 0.10009766, 0.10009766, &amp;hellip;, 0.10009766,
0.10009766, 0.5 ],
[0.5 , 0.10009766, 0.10009766, &amp;hellip;, 0.10009766,
0.10009766, 0.5 ],
[0.5 , 0.5 , 0.5 , &amp;hellip;, 0.5 ,
0.5 , 0.5 ]],&lt;/p>
&lt;p>[[1.5 , 1.5 , 1.5 , &amp;hellip;, 1.5 ,
1.5 , 1.5 ],
[1.5 , 1.5170898 , 1.5170898 , &amp;hellip;, 0.30029297,
0.30029297, 1.5 ],
[1.5 , 1.5170898 , 1.5170898 , &amp;hellip;, 0.30029297,
0.30029297, 1.5 ],
&amp;hellip;,
[1.5 , 0.30029297, 0.30029297, &amp;hellip;, 0.30029297,
0.30029297, 1.5 ],
[1.5 , 0.30029297, 0.30029297, &amp;hellip;, 0.30029297,
0.30029297, 1.5 ],
[1.5 , 1.5 , 1.5 , &amp;hellip;, 1.5 ,
1.5 , 1.5 ]]], dtype=float32)&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>longitude&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(y_dim, x_dim)&lt;/div>&lt;div class='xr-var-dtype'>float32&lt;/div>&lt;div class='xr-var-preview xr-preview'>-19.89 -19.78 -19.67 &amp;hellip; 12.89 13.0&lt;/div>&lt;input id='attrs-0e86c96f-d638-4979-8164-bdb37561deaa' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-0e86c96f-d638-4979-8164-bdb37561deaa' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-167947fc-a380-4f12-8b5f-620a70078b72' class='xr-var-data-in' type='checkbox'>&lt;label for='data-167947fc-a380-4f12-8b5f-620a70078b72' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([[-19.888672, -19.777344, -19.666992, &amp;hellip;, 12.777344, 12.888672,
13. ],
[-19.888672, -19.777344, -19.666992, &amp;hellip;, 12.777344, 12.888672,
13. ],
[-19.888672, -19.777344, -19.666992, &amp;hellip;, 12.777344, 12.888672,
13. ],
&amp;hellip;,
[-19.888672, -19.777344, -19.666992, &amp;hellip;, 12.777344, 12.888672,
13. ],
[-19.888672, -19.777344, -19.666992, &amp;hellip;, 12.777344, 12.888672,
13. ],
[-19.888672, -19.777344, -19.666992, &amp;hellip;, 12.777344, 12.888672,
13. ]], dtype=float32)&lt;/pre>&lt;/div>&lt;/li>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>latitude&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(y_dim, x_dim)&lt;/div>&lt;div class='xr-var-dtype'>float32&lt;/div>&lt;div class='xr-var-preview xr-preview'>40.07 40.07 40.07 &amp;hellip; 65.0 65.0&lt;/div>&lt;input id='attrs-cdac02e9-ca12-4cb4-8d48-61c5ce285d82' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-cdac02e9-ca12-4cb4-8d48-61c5ce285d82' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-ea8c2fe0-525b-4b82-8037-44b0dfa649d9' class='xr-var-data-in' type='checkbox'>&lt;label for='data-ea8c2fe0-525b-4b82-8037-44b0dfa649d9' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([[40.066406, 40.066406, 40.066406, &amp;hellip;, 40.066406, 40.066406,
40.066406],
[40.13379 , 40.13379 , 40.13379 , &amp;hellip;, 40.13379 , 40.13379 ,
40.13379 ],
[40.200195, 40.200195, 40.200195, &amp;hellip;, 40.200195, 40.200195,
40.200195],
&amp;hellip;,
[64.868164, 64.868164, 64.868164, &amp;hellip;, 64.868164, 64.868164,
64.868164],
[64.93457 , 64.93457 , 64.93457 , &amp;hellip;, 64.93457 , 64.93457 ,
64.93457 ],
[65.00098 , 65.00098 , 65.00098 , &amp;hellip;, 65.00098 , 65.00098 ,
65.00098 ]], dtype=float32)&lt;/pre>&lt;/div>&lt;/li>&lt;/ul>&lt;/div>&lt;/li>&lt;li class='xr-section-item'>&lt;input id='section-d29aa2d0-05d7-4861-8eef-e99d5e572269' class='xr-section-summary-in' type='checkbox' checked>&lt;label for='section-d29aa2d0-05d7-4861-8eef-e99d5e572269' class='xr-section-summary' >Data variables: &lt;span>(3)&lt;/span>&lt;/label>&lt;div class='xr-section-inline-details'>&lt;/div>&lt;div class='xr-section-details'>&lt;ul class='xr-var-list'>&lt;li class='xr-var-item'>&lt;div class='xr-var-name'>&lt;span>trend&lt;/span>&lt;/div>&lt;div class='xr-var-dims'>(t_dim, z_dim, y_dim, x_dim)&lt;/div>&lt;div class='xr-var-dtype'>float64&lt;/div>&lt;div class='xr-var-preview xr-preview'>nan nan nan nan &amp;hellip; nan nan nan nan&lt;/div>&lt;input id='attrs-75ff8ffe-6c34-4008-ac76-3f2d53776a08' class='xr-var-attrs-in' type='checkbox' disabled>&lt;label for='attrs-75ff8ffe-6c34-4008-ac76-3f2d53776a08' title='Show/Hide attributes'>&lt;svg class='icon xr-icon-file-text2'>&lt;use xlink:href='#icon-file-text2'>&lt;/use>&lt;/svg>&lt;/label>&lt;input id='data-07c48afc-26e1-4069-b3df-cbb4d4ab8773' class='xr-var-data-in' type='checkbox'>&lt;label for='data-07c48afc-26e1-4069-b3df-cbb4d4ab8773' title='Show/Hide data repr'>&lt;svg class='icon xr-icon-database'>&lt;use xlink:href='#icon-database'>&lt;/use>&lt;/svg>&lt;/label>&lt;div class='xr-var-attrs'>&lt;dl class='xr-attrs'>&lt;/dl>&lt;/div>&lt;div class='xr-var-data'>&lt;pre>array([[[[ nan, nan, nan, &amp;hellip;, nan,
nan, nan],
[ nan, 15.22220794, 15.21895274, &amp;hellip;, nan,
nan, nan],
[ nan, 15.21114024, 15.37894623, &amp;hellip;, nan,
nan, nan],
&amp;hellip;,
[ nan, nan, nan, &amp;hellip;, nan,
nan, nan],
[ nan, nan, nan, &amp;hellip;, nan,
nan, nan],
[ nan, nan, nan, &amp;hellip;, nan,
nan, nan]],&lt;/p>
&lt;pre>&lt;code>[[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, 15.22123138, 15.21813893, ..., nan,
nan, nan],
[ nan, 15.21000091, 15.38285248, ..., nan,
nan, nan],
&lt;/code>&lt;/pre>
&lt;/li>
&lt;/ul>
&lt;p>&amp;hellip;
[ nan, nan, nan, &amp;hellip;, nan,
nan, nan],
[ nan, nan, nan, &amp;hellip;, nan,
nan, nan],
[ nan, nan, nan, &amp;hellip;, nan,
nan, nan]],&lt;/p>
&lt;pre>&lt;code> [[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, 17.62710025, 17.6240078 , ..., nan,
nan, nan],
[ nan, 17.61586978, 17.78872134, ..., nan,
nan, nan],
...,
[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, nan, nan, ..., nan,
nan, nan]]]])&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li class='xr-var-item'&amp;gt;&amp;lt;div class='xr-var-name'&amp;gt;&amp;lt;span&amp;gt;seasonal&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class='xr-var-dims'&amp;gt;(t_dim, z_dim, y_dim, x_dim)&amp;lt;/div&amp;gt;&amp;lt;div class='xr-var-dtype'&amp;gt;float64&amp;lt;/div&amp;gt;&amp;lt;div class='xr-var-preview xr-preview'&amp;gt;nan nan nan nan ... nan nan nan nan&amp;lt;/div&amp;gt;&amp;lt;input id='attrs-c9911e4e-7848-44af-90d4-d1667c9023ed' class='xr-var-attrs-in' type='checkbox' disabled&amp;gt;&amp;lt;label for='attrs-c9911e4e-7848-44af-90d4-d1667c9023ed' title='Show/Hide attributes'&amp;gt;&amp;lt;svg class='icon xr-icon-file-text2'&amp;gt;&amp;lt;use xlink:href='#icon-file-text2'&amp;gt;&amp;lt;/use&amp;gt;&amp;lt;/svg&amp;gt;&amp;lt;/label&amp;gt;&amp;lt;input id='data-e199cbdb-161d-4a38-8edd-64d801f2379e' class='xr-var-data-in' type='checkbox'&amp;gt;&amp;lt;label for='data-e199cbdb-161d-4a38-8edd-64d801f2379e' title='Show/Hide data repr'&amp;gt;&amp;lt;svg class='icon xr-icon-database'&amp;gt;&amp;lt;use xlink:href='#icon-database'&amp;gt;&amp;lt;/use&amp;gt;&amp;lt;/svg&amp;gt;&amp;lt;/label&amp;gt;&amp;lt;div class='xr-var-attrs'&amp;gt;&amp;lt;dl class='xr-attrs'&amp;gt;&amp;lt;/dl&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class='xr-var-data'&amp;gt;&amp;lt;pre&amp;gt;array([[[[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, 0.08707137, 0.00341252, ..., nan,
nan, nan],
[ nan, 0.11278752, 0.34244247, ..., nan,
nan, nan],
...,
[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, nan, nan, ..., nan,
nan, nan]],
[[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, 0.07632919, -0.00749243, ..., nan,
nan, nan],
[ nan, 0.10220809, 0.33853622, ..., nan,
nan, nan],
&lt;/code>&lt;/pre>
&lt;p>&amp;hellip;
[ nan, nan, nan, &amp;hellip;, nan,
nan, nan],
[ nan, nan, nan, &amp;hellip;, nan,
nan, nan],
[ nan, nan, nan, &amp;hellip;, nan,
nan, nan]],&lt;/p>
&lt;pre>&lt;code> [[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, -0.34491586, -0.32815154, ..., nan,
nan, nan],
[ nan, -0.35516977, -0.70380258, ..., nan,
nan, nan],
...,
[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, nan, nan, ..., nan,
nan, nan]]]])&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li class='xr-var-item'&amp;gt;&amp;lt;div class='xr-var-name'&amp;gt;&amp;lt;span&amp;gt;residual&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class='xr-var-dims'&amp;gt;(t_dim, z_dim, y_dim, x_dim)&amp;lt;/div&amp;gt;&amp;lt;div class='xr-var-dtype'&amp;gt;float64&amp;lt;/div&amp;gt;&amp;lt;div class='xr-var-preview xr-preview'&amp;gt;nan nan nan nan ... nan nan nan nan&amp;lt;/div&amp;gt;&amp;lt;input id='attrs-c7ea4039-7cd4-4d32-8a70-b4ca4023d93a' class='xr-var-attrs-in' type='checkbox' disabled&amp;gt;&amp;lt;label for='attrs-c7ea4039-7cd4-4d32-8a70-b4ca4023d93a' title='Show/Hide attributes'&amp;gt;&amp;lt;svg class='icon xr-icon-file-text2'&amp;gt;&amp;lt;use xlink:href='#icon-file-text2'&amp;gt;&amp;lt;/use&amp;gt;&amp;lt;/svg&amp;gt;&amp;lt;/label&amp;gt;&amp;lt;input id='data-062986f2-6583-4d8f-a176-7bd1cbaf9c74' class='xr-var-data-in' type='checkbox'&amp;gt;&amp;lt;label for='data-062986f2-6583-4d8f-a176-7bd1cbaf9c74' title='Show/Hide data repr'&amp;gt;&amp;lt;svg class='icon xr-icon-database'&amp;gt;&amp;lt;use xlink:href='#icon-database'&amp;gt;&amp;lt;/use&amp;gt;&amp;lt;/svg&amp;gt;&amp;lt;/label&amp;gt;&amp;lt;div class='xr-var-attrs'&amp;gt;&amp;lt;dl class='xr-attrs'&amp;gt;&amp;lt;/dl&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class='xr-var-data'&amp;gt;&amp;lt;pre&amp;gt;array([[[[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, 0.05458194, 0.05458194, ..., nan,
nan, nan],
[ nan, 0.05458194, 0.05458194, ..., nan,
nan, nan],
...,
[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, nan, nan, ..., nan,
nan, nan]],
[[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, 0.05458194, 0.05458194, ..., nan,
nan, nan],
[ nan, 0.05458194, 0.05458194, ..., nan,
nan, nan],
&lt;/code>&lt;/pre>
&lt;p>&amp;hellip;
[ nan, nan, nan, &amp;hellip;, nan,
nan, nan],
[ nan, nan, nan, &amp;hellip;, nan,
nan, nan],
[ nan, nan, nan, &amp;hellip;, nan,
nan, nan]],&lt;/p>
&lt;pre>&lt;code> [[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, -0.01408253, -0.01408253, ..., nan,
nan, nan],
[ nan, -0.01408253, -0.01408253, ..., nan,
nan, nan],
...,
[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, nan, nan, ..., nan,
nan, nan],
[ nan, nan, nan, ..., nan,
nan, nan]]]])&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li class='xr-section-item'&amp;gt;&amp;lt;input id='section-9661b5e4-eee2-4dea-97ed-27736d778672' class='xr-section-summary-in' type='checkbox' &amp;gt;&amp;lt;label for='section-9661b5e4-eee2-4dea-97ed-27736d778672' class='xr-section-summary' &amp;gt;Indexes: &amp;lt;span&amp;gt;(1)&amp;lt;/span&amp;gt;&amp;lt;/label&amp;gt;&amp;lt;div class='xr-section-inline-details'&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class='xr-section-details'&amp;gt;&amp;lt;ul class='xr-var-list'&amp;gt;&amp;lt;li class='xr-var-item'&amp;gt;&amp;lt;div class='xr-index-name'&amp;gt;&amp;lt;div&amp;gt;t_dim&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class='xr-index-preview'&amp;gt;PandasIndex&amp;lt;/div&amp;gt;&amp;lt;div&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;input id='index-38d0f3d7-8a45-4080-84d9-a21f0abf7bcd' class='xr-index-data-in' type='checkbox'/&amp;gt;&amp;lt;label for='index-38d0f3d7-8a45-4080-84d9-a21f0abf7bcd' title='Show/Hide index repr'&amp;gt;&amp;lt;svg class='icon xr-icon-database'&amp;gt;&amp;lt;use xlink:href='#icon-database'&amp;gt;&amp;lt;/use&amp;gt;&amp;lt;/svg&amp;gt;&amp;lt;/label&amp;gt;&amp;lt;div class='xr-index-data'&amp;gt;&amp;lt;pre&amp;gt;PandasIndex(DatetimeIndex([&amp;amp;#x27;2010-01-01&amp;amp;#x27;, &amp;amp;#x27;2010-02-01&amp;amp;#x27;, &amp;amp;#x27;2010-03-01&amp;amp;#x27;, &amp;amp;#x27;2010-04-01&amp;amp;#x27;,
&amp;amp;#x27;2010-05-01&amp;amp;#x27;, &amp;amp;#x27;2010-06-01&amp;amp;#x27;, &amp;amp;#x27;2010-07-01&amp;amp;#x27;, &amp;amp;#x27;2010-08-01&amp;amp;#x27;,
&amp;amp;#x27;2010-09-01&amp;amp;#x27;, &amp;amp;#x27;2010-10-01&amp;amp;#x27;, &amp;amp;#x27;2010-11-01&amp;amp;#x27;, &amp;amp;#x27;2010-12-01&amp;amp;#x27;,
&amp;amp;#x27;2011-01-01&amp;amp;#x27;, &amp;amp;#x27;2011-02-01&amp;amp;#x27;, &amp;amp;#x27;2011-03-01&amp;amp;#x27;, &amp;amp;#x27;2011-04-01&amp;amp;#x27;,
&amp;amp;#x27;2011-05-01&amp;amp;#x27;, &amp;amp;#x27;2011-06-01&amp;amp;#x27;, &amp;amp;#x27;2011-07-01&amp;amp;#x27;, &amp;amp;#x27;2011-08-01&amp;amp;#x27;,
&amp;amp;#x27;2011-09-01&amp;amp;#x27;, &amp;amp;#x27;2011-10-01&amp;amp;#x27;, &amp;amp;#x27;2011-11-01&amp;amp;#x27;, &amp;amp;#x27;2011-12-01&amp;amp;#x27;,
&amp;amp;#x27;2012-01-01&amp;amp;#x27;, &amp;amp;#x27;2012-02-01&amp;amp;#x27;, &amp;amp;#x27;2012-03-01&amp;amp;#x27;, &amp;amp;#x27;2012-04-01&amp;amp;#x27;,
&amp;amp;#x27;2012-05-01&amp;amp;#x27;, &amp;amp;#x27;2012-06-01&amp;amp;#x27;, &amp;amp;#x27;2012-07-01&amp;amp;#x27;, &amp;amp;#x27;2012-08-01&amp;amp;#x27;,
&amp;amp;#x27;2012-09-01&amp;amp;#x27;, &amp;amp;#x27;2012-10-01&amp;amp;#x27;, &amp;amp;#x27;2012-11-01&amp;amp;#x27;, &amp;amp;#x27;2012-12-01&amp;amp;#x27;,
&amp;amp;#x27;2013-01-01&amp;amp;#x27;, &amp;amp;#x27;2013-02-01&amp;amp;#x27;, &amp;amp;#x27;2013-03-01&amp;amp;#x27;, &amp;amp;#x27;2013-04-01&amp;amp;#x27;,
&amp;amp;#x27;2013-05-01&amp;amp;#x27;, &amp;amp;#x27;2013-06-01&amp;amp;#x27;, &amp;amp;#x27;2013-07-01&amp;amp;#x27;, &amp;amp;#x27;2013-08-01&amp;amp;#x27;,
&amp;amp;#x27;2013-09-01&amp;amp;#x27;, &amp;amp;#x27;2013-10-01&amp;amp;#x27;, &amp;amp;#x27;2013-11-01&amp;amp;#x27;, &amp;amp;#x27;2013-12-01&amp;amp;#x27;],
dtype=&amp;amp;#x27;datetime64[ns]&amp;amp;#x27;, name=&amp;amp;#x27;t_dim&amp;amp;#x27;, freq=None))&amp;lt;/pre&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;li class='xr-section-item'&amp;gt;&amp;lt;input id='section-ef51b210-dd89-4548-b169-0da7d1d04474' class='xr-section-summary-in' type='checkbox' disabled &amp;gt;&amp;lt;label for='section-ef51b210-dd89-4548-b169-0da7d1d04474' class='xr-section-summary' title='Expand/collapse section'&amp;gt;Attributes: &amp;lt;span&amp;gt;(0)&amp;lt;/span&amp;gt;&amp;lt;/label&amp;gt;&amp;lt;div class='xr-section-inline-details'&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;div class='xr-section-details'&amp;gt;&amp;lt;dl class='xr-attrs'&amp;gt;&amp;lt;/dl&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/li&amp;gt;&amp;lt;/ul&amp;gt;&amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;
&lt;/code>&lt;/pre>
&lt;p>Plot the decomposed time series&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">&lt;span style="color:#000">component&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">xr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">DataArray&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;trend&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;seasonal&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;residual&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span> &lt;span style="color:#000">dims&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;component&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;component&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">temp_decomp&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">xr&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">concat&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">grd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">trend&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">grd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">seasonal&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#000">grd&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dataset&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">residual&lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span> &lt;span style="color:#000">dim&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">component&lt;/span>
&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;span style="color:#000">temp_decomp&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">name&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;temperature&amp;#34;&lt;/span>
&lt;span style="color:#000">temp_decomp&lt;/span>&lt;span style="color:#000;font-weight:bold">[:,:,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">plot&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">hue&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;component&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/code>&lt;/pre>&lt;/div>&lt;pre>&lt;code>[&amp;lt;matplotlib.lines.Line2D at 0x7f567caaddc0&amp;gt;,
&amp;lt;matplotlib.lines.Line2D at 0x7f567ca84340&amp;gt;,
&amp;lt;matplotlib.lines.Line2D at 0x7f567ca3a040&amp;gt;]
&lt;/code>&lt;/pre>
&lt;p>&lt;img src="https://british-oceanographic-data-centre.github.io/COAsT/COAsT/seasonal_decomp_example_files/seasonal_decomp_example_17_1.png" alt="png">&lt;/p>
&lt;div class="highlight">&lt;pre style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4">&lt;code class="language-python" data-lang="python">
&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>